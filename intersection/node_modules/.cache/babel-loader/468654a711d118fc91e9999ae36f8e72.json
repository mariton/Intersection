{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square, XAxis, YAxis } from './utilities';\nimport * as R from 'ramda';\n\nconst xAxis = items => {\n  const xScaleKey = 'column';\n  const getXLabels = R.pipe(R.flatten, R.map(R.prop(xScaleKey)), R.uniq, R.sortBy(R.prop(xScaleKey)));\n  const xLabels = getXLabels(items);\n  console.log(xLabels);\n  return xLabels;\n};\n\nconst yAxis = items => {\n  const getYLabels = R.pipe(R.flatten, R.uniq);\n  const yLabel = getYLabels(items);\n  return yLabel;\n};\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }\n\n  renderxAxis(item, className = \"xAxis\") {\n    return React.createElement(XAxis, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n  renderyAxis(item, className = \"yAxis\") {\n    return React.createElement(YAxis, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n  getDatasource(dataRaw) {\n    return dataRaw.map(ds => ds.data);\n  }\n\n  render() {\n    var dsItems = this.getDatasource(this.props.data);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, dsItems.map(rowItems => rowItems.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, R.map(this.renderSquare, row.items)))), React.createElement(\"div\", {\n      className: \"board-row-axis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.renderSquare([], \"squareInvisible\"), R.map(this.renderxAxis, xAxis(dsItems.map(row => row.map(rowItems => rowItems.items))))));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","XAxis","YAxis","R","xAxis","items","xScaleKey","getXLabels","pipe","flatten","map","prop","uniq","sortBy","xLabels","console","log","yAxis","getYLabels","yLabel","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","renderxAxis","renderyAxis","getDatasource","dataRaw","ds","render","dsItems","rowItems","row","uniqueId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Square , XAxis, YAxis} from './utilities';\nimport * as R from 'ramda';\n\nconst xAxis = (items) => {\n\tconst xScaleKey = 'column';\n\n\tconst getXLabels = R.pipe(\n\t\tR.flatten,\n\t\tR.map(R.prop(xScaleKey)),\n\t\tR.uniq,\n\t\tR.sortBy(R.prop(xScaleKey))\n\t\t)\n\n\tconst xLabels = getXLabels(items);\n\tconsole.log(xLabels)\n\treturn xLabels;\n};\nconst yAxis = (items) => {\n\n\tconst getYLabels = R.pipe(\n\t\tR.flatten,\n\t\tR.uniq\n\t\t)\n\n\tconst yLabel = getYLabels(items)\n\treturn yLabel;\n};\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\trenderxAxis(item, className=\"xAxis\") {\n\t\treturn <XAxis item={item} className = {className} />;\n\t};\n\trenderyAxis(item, className=\"yAxis\") {\n\t\treturn <YAxis item={item} className = {className} />;\n\t};\n\t\n\n\tgetDatasource(dataRaw) {\n\t\t\n\t\treturn dataRaw.map(ds => (ds.data))\n\t}\n\n\trender() {\n\t\tvar dsItems = this.getDatasource(this.props.data)\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{\n\t\t\t\t\tdsItems.map(rowItems => (rowItems.map(row => (\n\t\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))))\n\t\t\t\t}\n\t\t\t\t<div className=\"board-row-axis\">\n\t\t\t\t\t{this.renderSquare([], \"squareInvisible\")}\n\t\t\t\t\t{ R.map(this.renderxAxis, xAxis(dsItems.map(row => (row.map(rowItems => (rowItems.items))))))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}