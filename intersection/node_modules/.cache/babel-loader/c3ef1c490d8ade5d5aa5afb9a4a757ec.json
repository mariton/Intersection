{"ast":null,"code":"import _slicedToArray from \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/ReactNode.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { withContext } from 'react-dims';\nimport Matrix from './matrix/Matrix';\n\nconst ReactNode = ({\n  dims,\n  data\n}) => {\n  const domNode = useRef(null); //const [canvas, createCanvas] = useState(null);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        vizInitialized = _useState2[0],\n        setVizInitialized = _useState2[1];\n\n  dims = {\n    width: 500,\n    height: 500\n  };\n  console.log(\"reactnode-data\", data);\n  console.log(\"reactnode-dims\", dims);\n  const canvas = new Matrix(domNode.current);\n  useEffect(() => {\n    if (data.length > 1 && dims.width && vizInitialized === false) {\n      canvas.init(data, dims);\n      setVizInitialized(() => true);\n    }\n\n    ;\n  }, [data, dims, vizInitialized, canvas]);\n  useEffect(() => {\n    vizInitialized && canvas.updateData(data);\n  }, [data, vizInitialized, canvas]);\n  console.log(\"canvas\", canvas);\n  return React.createElement(\"div\", {\n    ref: domNode,\n    style: {\n      display: 'grid',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default withContext(ReactNode);","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/ReactNode.js"],"names":["React","useRef","useState","useEffect","withContext","Matrix","ReactNode","dims","data","domNode","vizInitialized","setVizInitialized","width","height","console","log","canvas","current","length","init","updateData","display"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAgB;AAChC,QAAMC,OAAO,GAAGR,MAAM,CAAC,IAAD,CAAtB,CADgC,CAEhC;;AAFgC,oBAGWC,QAAQ,CAAC,KAAD,CAHnB;AAAA;AAAA,QAGzBQ,cAHyB;AAAA,QAGTC,iBAHS;;AAIhCJ,EAAAA,IAAI,GAAG;AAACK,IAAAA,KAAK,EAAC,GAAP;AAAWC,IAAAA,MAAM,EAAC;AAAlB,GAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,IAA9B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,IAA9B;AAGA,QAAMS,MAAM,GAAI,IAAIX,MAAJ,CAAWI,OAAO,CAACQ,OAAnB,CAAhB;AAEAd,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGK,IAAI,CAACU,MAAL,GAAY,CAAZ,IAAiBX,IAAI,CAACK,KAAtB,IAA+BF,cAAc,KAAG,KAAnD,EAAyD;AACvDM,MAAAA,MAAM,CAACG,IAAP,CAAYX,IAAZ,EAAkBD,IAAlB;AACAI,MAAAA,iBAAiB,CAAC,MAAI,IAAL,CAAjB;AACD;;AAAA;AACF,GALQ,EAKP,CAACH,IAAD,EAAOD,IAAP,EAAaG,cAAb,EAA6BM,MAA7B,CALO,CAAT;AAOAb,EAAAA,SAAS,CAAC,MAAI;AACZO,IAAAA,cAAc,IAAIM,MAAM,CAACI,UAAP,CAAkBZ,IAAlB,CAAlB;AACD,GAFQ,EAEN,CAACA,IAAD,EAAOE,cAAP,EAAuBM,MAAvB,CAFM,CAAT;AAGAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,MAAtB;AACA,SACE;AAAK,IAAA,GAAG,EAAEP,OAAV;AAAmB,IAAA,KAAK,EAAE;AAACY,MAAAA,OAAO,EAAE,MAAV;AAAkBR,MAAAA,MAAM,EAAE;AAA1B,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAzBD;;AA2BA,eAAeT,WAAW,CAACE,SAAD,CAA1B","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { withContext } from 'react-dims';\nimport Matrix from './matrix/Matrix';\n\nconst ReactNode = ({dims, data})=>{\n  const domNode = useRef(null);\n  //const [canvas, createCanvas] = useState(null);\n  const [vizInitialized, setVizInitialized]= useState(false);\n  dims = {width:500,height:500};\n  console.log(\"reactnode-data\", data);\n  console.log(\"reactnode-dims\", dims)\n\n\n  const canvas =  new Matrix(domNode.current);\n  \n  useEffect(()=>{\n    if(data.length>1 && dims.width && vizInitialized===false){\n      canvas.init(data, dims);\n      setVizInitialized(()=>true);\n    };\n  },[data, dims, vizInitialized, canvas]);\n\n  useEffect(()=>{\n    vizInitialized && canvas.updateData(data);\n  }, [data, vizInitialized, canvas]);\n  console.log(\"canvas\", canvas)\n  return (\n    <div ref={domNode} style={{display: 'grid', height: '100%'}}/>\n  )\n};\n\nexport default withContext(ReactNode);"]},"metadata":{},"sourceType":"module"}