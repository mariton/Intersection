{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square, XAxis } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  xAxis(items, className = \"xAxis\") {\n    const xScaleKey = 'column';\n    const getXLabels = R.compose(R.map(R.prop(xScaleKey)), R.head, R.values);\n    const xLabels = getXLabels({\n      items\n    });\n    console.log(xLabels);\n    return xLabels;\n  }\n\n  render() {\n    console.log(this.props.data[0].items);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.data.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, row.rowKey), R.map(this.renderSquare, row.items))), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, R.map(this.renderSquare, this.xAxis(this.props.data[0].items))));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","XAxis","R","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","xAxis","items","xScaleKey","getXLabels","compose","map","prop","head","values","xLabels","console","log","render","row","uniqueId","rowKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAA8B,aAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAGnBC,IAHmB,GAGd,CAACC,IAAD,EAAMC,IAAN,KAAc,CAElB,CALkB;AAElB;;AAIDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,SAAS,GAAC,QAAjB,EAA2B;AACtC,WAAO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAIC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACDC,EAAAA,KAAK,CAACC,KAAD,EAAQF,SAAS,GAAC,OAAlB,EAA2B;AAC/B,UAAMG,SAAS,GAAG,QAAlB;AAEA,UAAMC,UAAU,GAAGd,CAAC,CAACe,OAAF,CACjBf,CAAC,CAACgB,GAAF,CAAMhB,CAAC,CAACiB,IAAF,CAAOJ,SAAP,CAAN,CADiB,EAEjBb,CAAC,CAACkB,IAFe,EAGjBlB,CAAC,CAACmB,MAHe,CAAnB;AAKA,UAAMC,OAAO,GAAGN,UAAU,CAAC;AAACF,MAAAA;AAAD,KAAD,CAA1B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAOA,OAAP;AACA;;AAEDG,EAAAA,MAAM,GAAG;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBM,KAA/B;AACA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKR,KAAL,CAAWE,IAAX,CAAgBU,GAAhB,CAAoBQ,GAAG,IACtB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAG,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,GAAG,CAACE,MADN,CADD,EAIE1B,CAAC,CAACgB,GAAF,CAAM,KAAKR,YAAX,EAAyBgB,GAAG,CAACZ,KAA7B,CAJF,CADD,CAFD,EAYC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEZ,CAAC,CAACgB,GAAF,CAAM,KAAKR,YAAX,EAAyB,KAAKG,KAAL,CAAW,KAAKP,KAAL,CAAWE,IAAX,CAAgB,CAAhB,EAAmBM,KAA9B,CAAzB,CAFF,CAZD,CADD;AAsBA;;AA/CmC;;AAgDpC;AACD,eAAeX,MAAf","sourcesContent":["import React from 'react';\nimport { Square , XAxis} from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\txAxis(items, className=\"xAxis\") {\n\t\tconst xScaleKey = 'column';\n\n\t\tconst getXLabels = R.compose(\n\t\t  R.map(R.prop(xScaleKey)), \n\t\t  R.head, \n\t\t  R.values\n\t\t)\n\t\tconst xLabels = getXLabels({items});\n\t\tconsole.log(xLabels);\n\t\treturn xLabels;\n\t};\n\n\trender() {\n\t\tconsole.log(this.props.data[0].items)\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tthis.props.data.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t<div className=\"yAxis\">\n\t\t\t\t\t\t\t{row.rowKey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{ \n\t\t\t\t\t\tR.map(this.renderSquare, this.xAxis(this.props.data[0].items))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}