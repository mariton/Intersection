{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  rendereachRow(row) {\n    const xScaleKey = 'rowKey';\n    const yScaleKey = 'column';\n    let rows = R.groupBy(R.prop(xScaleKey), row);\n    const matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows);\n    const getXLabels = R.keys;\n    const getYLabels = R.compose(R.map(R.prop(yScaleKey)), R.head, R.values);\n    console.log(rows);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.data.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, row.rowKey), R.map(this.renderSquare, row.items))), React.createElement(\"div\", {\n      className: \"xAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","R","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","rendereachRow","row","xScaleKey","yScaleKey","rows","groupBy","prop","matrix","mapObjIndexed","sortBy","getXLabels","keys","getYLabels","compose","map","head","values","console","log","render","uniqueId","rowKey","items"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAGnBC,IAHmB,GAGd,CAACC,IAAD,EAAMC,IAAN,KAAc,CAElB,CALkB;AAElB;;AAIDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,SAAS,GAAC,QAAjB,EAA2B;AACtC,WAAO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAIC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAEDC,EAAAA,aAAa,CAACC,GAAD,EAAM;AAClB,UAAMC,SAAS,GAAG,QAAlB;AACA,UAAMC,SAAS,GAAG,QAAlB;AACA,QAAIC,IAAI,GAAGf,CAAC,CAACgB,OAAF,CAAUhB,CAAC,CAACiB,IAAF,CAAOJ,SAAP,CAAV,EAA6BD,GAA7B,CAAX;AAEA,UAAMM,MAAM,GAAGlB,CAAC,CAACmB,aAAF,CAAgBnB,CAAC,CAACoB,MAAF,CAASpB,CAAC,CAACiB,IAAF,CAAOH,SAAP,CAAT,CAAhB,EAA6CC,IAA7C,CAAf;AAEA,UAAMM,UAAU,GAAGrB,CAAC,CAACsB,IAArB;AAEA,UAAMC,UAAU,GAAGvB,CAAC,CAACwB,OAAF,CACjBxB,CAAC,CAACyB,GAAF,CAAMzB,CAAC,CAACiB,IAAF,CAAOH,SAAP,CAAN,CADiB,EAEjBd,CAAC,CAAC0B,IAFe,EAGjB1B,CAAC,CAAC2B,MAHe,CAAnB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACA;;AAGDe,EAAAA,MAAM,GAAG;AAER,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAK1B,KAAL,CAAWE,IAAX,CAAgBmB,GAAhB,CAAoBb,GAAG,IACtB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAG,CAACmB,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEnB,GAAG,CAACoB,MADN,CADD,EAMEhC,CAAC,CAACyB,GAAF,CAAM,KAAKjB,YAAX,EAAyBI,GAAG,CAACqB,KAA7B,CANF,CADD,CAFD,EAaC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbD,CADD;AAoBA;;AAnDmC;;AAoDpC;AACD,eAAehC,MAAf","sourcesContent":["import React from 'react';\nimport { Square } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\n\trendereachRow(row) {\n\t\tconst xScaleKey = 'rowKey';\n\t\tconst yScaleKey = 'column';\n\t\tlet rows = R.groupBy(R.prop(xScaleKey), row);\n\n\t\tconst matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows);\n\n\t\tconst getXLabels = R.keys;\n\n\t\tconst getYLabels = R.compose(\n\t\t  R.map(R.prop(yScaleKey)), \n\t\t  R.head, \n\t\t  R.values\n\t\t)\n\t\tconsole.log(rows);\n\t};\n\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tthis.props.data.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t<div className=\"yAxis\">\n\t\t\t\t\t\t\t{row.rowKey}\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t\t<div className=\"xAxis\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}