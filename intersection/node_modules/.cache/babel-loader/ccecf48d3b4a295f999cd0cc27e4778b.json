{"ast":null,"code":"import _slicedToArray from \"/Users/marinas/WORK/GIT/ReactD3-projects/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/my-app/src/ReactDims.js\";\nimport React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nconst ReactDims = React.createContext(null);\n\nconst _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeoutID = _useState2[0],\n      newTimeoutID = _useState2[1];\n\nconst getNodeDimensions = () => {\n  clearTimeout(timeoutID);\n  newTimeoutID(setTimeout(() => {\n    setDimensions(domNode.current.getBoundingClientRect());\n  }, 300));\n};\n\nexport const Provider = props => {\n  const domNode = useRef(null);\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        dimensions = _useState4[0],\n        setDimensions = _useState4[1];\n\n  useEffect(() => {\n    setDimensions(domNode.current.getBoundingClientRect());\n  }, []);\n  useEffect(() => {\n    window.addEventListener('resize', getNodeDimensions);\n    return () => {\n      window.removeEventListener('resize', getNodeDimensions);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: domNode,\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ReactDims.Provider, {\n    value: dimensions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.children));\n}; // here is the consumer;\n\nexport const withContext = ChildComponent => {\n  return props => React.createElement(ReactDims.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, incomingDims => React.createElement(ChildComponent, Object.assign({}, props, {\n    dims: incomingDims,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/my-app/src/ReactDims.js"],"names":["React","useRef","useState","useEffect","ReactDims","createContext","timeoutID","newTimeoutID","getNodeDimensions","clearTimeout","setTimeout","setDimensions","domNode","current","getBoundingClientRect","Provider","props","dimensions","window","addEventListener","removeEventListener","height","children","withContext","ChildComponent","incomingDims"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAlB;;kBACkCH,QAAQ,CAAC,CAAD,C;;MAAnCI,S;MAAWC,Y;;AAClB,MAAMC,iBAAiB,GAAG,MAAI;AACxBC,EAAAA,YAAY,CAACH,SAAD,CAAZ;AACAC,EAAAA,YAAY,CAACG,UAAU,CAAC,MAAI;AACzBC,IAAAA,aAAa,CAACC,OAAO,CAACC,OAAR,CAAgBC,qBAAhB,EAAD,CAAb;AACA,GAFoB,EAElB,GAFkB,CAAX,CAAZ;AAID,CANL;;AAUA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAS;AAC/B,QAAMJ,OAAO,GAAGX,MAAM,CAAC,IAAD,CAAtB;;AAD+B,qBAEKC,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAExBe,UAFwB;AAAA,QAEZN,aAFY;;AAG/BR,EAAAA,SAAS,CAAC,MAAI;AACZQ,IAAAA,aAAa,CAACC,OAAO,CAACC,OAAR,CAAgBC,qBAAhB,EAAD,CAAb;AACD,GAFQ,EAEP,EAFO,CAAT;AAMAX,EAAAA,SAAS,CAAC,MAAI;AACbe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCX,iBAAlC;AACA,WAAO,MAAI;AAAEU,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCZ,iBAArC;AAAwD,KAArE;AACD,GAHS,EAGP,EAHO,CAAT;AAKA,SACE;AAAK,IAAA,GAAG,EAAEI,OAAV;AAAmB,IAAA,KAAK,EAAE;AAACS,MAAAA,MAAM,EAAE;AAAT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEJ,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACM,QADT,CADF,CADF;AAOD,CArBM,C,CAwBP;;AACA,OAAO,MAAMC,WAAW,GAAEC,cAAD,IAAkB;AACvC,SAAQR,KAAD,IACH,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIS,YAAD,IAAiB,oBAAC,cAAD,oBAAoBT,KAApB;AAA2B,IAAA,IAAI,EAAES,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADpB,CADJ;AAKH,CANM","sourcesContent":["import React from 'react';\nimport { useRef, useState, useEffect } from 'react';\n\nconst ReactDims = React.createContext(null);\nconst [timeoutID, newTimeoutID] = useState(0);\nconst getNodeDimensions = ()=>{\n      clearTimeout(timeoutID);\n      newTimeoutID(setTimeout(()=>{\n         setDimensions(domNode.current.getBoundingClientRect());\n        }, 300)\n      );\n    };\n\n\n\nexport const Provider = (props)=>{\n  const domNode = useRef(null); \n  const [dimensions, setDimensions] = useState({});\n  useEffect(()=>{\n    setDimensions(domNode.current.getBoundingClientRect()); \n  },[]);\n\n \n\n  useEffect(()=>{\n   window.addEventListener('resize', getNodeDimensions);\n   return ()=>{ window.removeEventListener('resize', getNodeDimensions)};\n }, []);\n\n  return (\n    <div ref={domNode} style={{height: \"100%\"}} >\n      <ReactDims.Provider value={dimensions}>\n        {props.children}\n      </ReactDims.Provider>\n    </div>\n    )\n};\n\n\n// here is the consumer;\nexport const withContext=(ChildComponent)=>{\n    return (props)=>(\n        <ReactDims.Consumer>\n          {(incomingDims)=>(<ChildComponent {...props} dims={incomingDims} />)}\n        </ReactDims.Consumer>\n    )\n};"]},"metadata":{},"sourceType":"module"}