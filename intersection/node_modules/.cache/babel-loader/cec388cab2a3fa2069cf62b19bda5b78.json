{"ast":null,"code":"import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component {\n  constructor(chart, options, dims, data, scales) {\n    super(chart, options);\n\n    this.updateData = newData => {\n      this.data = newData;\n      console.log(\"legend\", this.data);\n      this.allLegend = this.legendContainer.selectAll('.legendCircle').data(this.data);\n      this.allLegend.attr('cx', 0).attr('cy', 0).attr('fill', d => d.color);\n      this.enter();\n    };\n\n    this.enter = () => {\n      this.allLegend.enter().append('circle').attr('class', 'legendCircle').attr('cx', (d, i) => i).attr('cy', d => 0).attr('r', d => 5).attr('fill', d => d.color).attr(\"opacity\", 0.8);\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allLegend.exit().remove();\n    };\n\n    this.chart = chart;\n    this.options = options;\n    this.dims = dims;\n    this.scales = scales;\n    this.legend = this.chart.append('g').attr('class', 'legend');\n    this.legend.append('rect').attr('x', this.dims.innerWidth).attr('y', this.dims.innerHeight - 100).attr('fill', '#efefef').attr('class', 'legend');\n    console.log(\"legend data\", data);\n    this.legendContainer = this.legend.selectAll('rect .legend');\n    this.updateData(data);\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Legend.js"],"names":["React","Circles","Intersection","Legend","Component","constructor","chart","options","dims","data","scales","updateData","newData","console","log","allLegend","legendContainer","selectAll","attr","d","color","enter","append","i","exit","remove","legend","innerWidth","innerHeight"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,aAAtC;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AAC/C,UAAMJ,KAAN,EAAaC,OAAb;;AAD+C,SAwBhDI,UAxBgD,GAwBlCC,OAAD,IAAa;AACzB,WAAKH,IAAL,GAAYG,OAAZ;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKL,IAA3B;AACA,WAAKM,SAAL,GAAiB,KAAKC,eAAL,CAAqBC,SAArB,CAA+B,eAA/B,EAAgDR,IAAhD,CAAqD,KAAKA,IAA1D,CAAjB;AACA,WAAKM,SAAL,CACQG,IADR,CACa,IADb,EACmB,CADnB,EAEQA,IAFR,CAEa,IAFb,EAEmB,CAFnB,EAGQA,IAHR,CAGa,MAHb,EAGsBC,CAAD,IAAOA,CAAC,CAACC,KAH9B;AAIG,WAAKC,KAAL;AACH,KAlC+C;;AAAA,SAoChDA,KApCgD,GAoCxC,MAAM;AACb,WAAKN,SAAL,CAAeM,KAAf,GACQC,MADR,CACe,QADf,EAEQJ,IAFR,CAEa,OAFb,EAEsB,cAFtB,EAGQA,IAHR,CAGa,IAHb,EAGmB,CAACC,CAAD,EAAGI,CAAH,KAAQA,CAH3B,EAIQL,IAJR,CAIa,IAJb,EAIoBC,CAAD,IAAK,CAJxB,EAKQD,IALR,CAKa,GALb,EAKmBC,CAAD,IAAO,CALzB,EAMQD,IANR,CAMa,MANb,EAMsBC,CAAD,IAAOA,CAAC,CAACC,KAN9B,EAOQF,IAPR,CAOa,SAPb,EAOwB,GAPxB;AAQM,WAAKM,IAAL;AACN,KA9C+C;;AAAA,SA+ChDA,IA/CgD,GA+C3C,MAAI;AACL,WAAKT,SAAL,CAAeS,IAAf,GAAsBC,MAAtB;AACH,KAjD+C;;AAE/C,SAAKnB,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAcA,MAAd;AAEA,SAAKgB,MAAL,GAAc,KAAKpB,KAAL,CAAWgB,MAAX,CAAkB,GAAlB,EAAuBJ,IAAvB,CAA4B,OAA5B,EAAqC,QAArC,CAAd;AAEA,SAAKQ,MAAL,CACEJ,MADF,CACS,MADT,EAEEJ,IAFF,CAEO,GAFP,EAEY,KAAKV,IAAL,CAAUmB,UAFtB,EAGET,IAHF,CAGO,GAHP,EAGY,KAAKV,IAAL,CAAUoB,WAAV,GAAwB,GAHpC,EAIEV,IAJF,CAIO,MAJP,EAIe,SAJf,EAKEA,IALF,CAKO,OALP,EAKgB,QALhB;AAOAL,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,IAA3B;AAEA,SAAKO,eAAL,GAAuB,KAAKU,MAAL,CAAYT,SAAZ,CAAsB,cAAtB,CAAvB;AAGA,SAAKN,UAAL,CAAgBF,IAAhB;AACA;;AAvBkC;;AAsDpC,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component{\n\tconstructor(chart, options, dims, data, scales) {\n\t\tsuper(chart, options);\n\t\tthis.chart = chart;\n\t\tthis.options = options;\n\t\tthis.dims = dims;\n\t\tthis.scales = scales;\n\n\t\tthis.legend = this.chart.append('g').attr('class', 'legend');\n\t\t\t\n\t\tthis.legend\n\t\t\t.append('rect')\n\t\t\t.attr('x', this.dims.innerWidth )\n\t\t\t.attr('y', this.dims.innerHeight - 100)\n\t\t\t.attr('fill', '#efefef')\n\t\t\t.attr('class', 'legend'); \n\n\t\tconsole.log(\"legend data\", data);\n\n\t\tthis.legendContainer = this.legend.selectAll('rect .legend');\n\n\n\t\tthis.updateData(data);\n\t};\n\n\tupdateData = (newData) => {\n\t\tthis.data = newData;\n\t\t\n\t\tconsole.log(\"legend\", this.data);\n\t\tthis.allLegend = this.legendContainer.selectAll('.legendCircle').data(this.data);\n\t\tthis.allLegend\n\t        .attr('cx', 0)\n\t        .attr('cy', 0)\n\t        .attr('fill', (d) => d.color)\n   \t\tthis.enter();\n\t};\n\n\tenter = () => {\n\t\tthis.allLegend.enter()\n\t        .append('circle')\n\t        .attr('class', 'legendCircle')\n\t        .attr('cx', (d,i)=> i)\n\t        .attr('cy', (d)=>0)\n\t        .attr('r', (d) => 5)\n\t        .attr('fill', (d) => d.color)\n\t        .attr(\"opacity\", 0.8)\n        this.exit();\n\t};\n\texit=()=>{\n\t    this.allLegend.exit().remove();\n\t};\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}