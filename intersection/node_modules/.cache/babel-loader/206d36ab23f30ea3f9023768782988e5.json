{"ast":null,"code":"import * as R from 'ramda';\nconst defaultLegendColor = '#fff459';\nconst defaultMarkColor = '#42d7f5';\nexport const xAxis = items => {\n  const xScaleKey = 'x';\n  const getXLabels = R.pipe(R.flatten, R.sortBy(R.prop(xScaleKey)), R.map(R.prop(xScaleKey)), R.uniq);\n  const xLabels = getXLabels(items);\n  return xLabels;\n};\nexport const yAxis = items => {\n  const getYLabels = R.pipe(R.flatten, R.uniq);\n  const yLabels = getYLabels(items);\n  return yLabels.sort();\n};\nexport const normalize = R.pipe(R.unnest, R.map(({\n  items,\n  y,\n  color,\n  label\n}) => {\n  return R.map(R.pipe(R.assoc('y', y), R.assoc('color', color), R.assoc('label', label)), items);\n}), R.unnest);\nexport const getDatasource = dataRaw => {\n  return dataRaw.map(ds => ds.data);\n};\nexport const setAttributes = R.pipe(R.map(({\n  data,\n  color,\n  label\n}) => {\n  return R.map(R.pipe(R.assoc('color', color), R.assoc('label', label)), data);\n}), R.unnest);\nexport const setLegendAttributes = (dataRaw, category) => {\n  var legendData = [];\n  dataRaw.map(row => {\n    legendData.push(R.pick([category, 'color'], row));\n  });\n  return legendData;\n};\nexport const intersections = circlesData => R.pipe(R.groupBy(({\n  y,\n  x\n}) => y + x), R.filter(R.compose(R.lt(1), R.length)), R.map(R.head), R.values)(circlesData);\nexport const defaultColor = color => {\n  return color !== undefined ? color : defaultLegendColor;\n};","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/functions.js"],"names":["R","defaultLegendColor","defaultMarkColor","xAxis","items","xScaleKey","getXLabels","pipe","flatten","sortBy","prop","map","uniq","xLabels","yAxis","getYLabels","yLabels","sort","normalize","unnest","y","color","label","assoc","getDatasource","dataRaw","ds","data","setAttributes","setLegendAttributes","category","legendData","row","push","pick","intersections","circlesData","groupBy","x","filter","compose","lt","length","head","values","defaultColor","undefined"],"mappings":"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","sourcesContent":["import * as R from 'ramda';\n\nconst defaultLegendColor = '#fff459';\nconst defaultMarkColor = '#42d7f5';\n\nexport const xAxis = (items) => {\n\tconst xScaleKey = 'x';\n\n\tconst getXLabels = R.pipe(\n\t\tR.flatten,\n\t\tR.sortBy(R.prop(xScaleKey)),\n\t\tR.map(R.prop(xScaleKey)),\n\t\tR.uniq\n\t\t)\n\n\tconst xLabels = getXLabels(items);\n\treturn xLabels;\n};\nexport const yAxis = (items) => {\n\n\tconst getYLabels = R.pipe(\n\t\tR.flatten,\n\t\tR.uniq\n\t\t)\n\n\tconst yLabels = getYLabels(items);\n\treturn yLabels.sort();\n};\n\nexport const normalize = R.pipe(\n  R.unnest,\n  R.map(({items, y, color, label}) => {\n    return R.map(R.pipe(\n    \tR.assoc('y', y),\n    \tR.assoc('color', color),\n    \tR.assoc('label', label)\n    ), items)\n  }),\n  R.unnest\n);\n\nexport const getDatasource = (dataRaw) => {\n\t\treturn dataRaw.map(ds => (ds.data))\n};\n\nexport const setAttributes = R.pipe(\n\tR.map(({data, color, label}) => {\n\t\treturn R.map(R.pipe(\n\t\t\t\tR.assoc('color', color),\n\t\t\t\tR.assoc('label', label)), data)\n\t\t}\n\t),\n\tR.unnest\n);\n\nexport const setLegendAttributes = (dataRaw, category) => {\n\t\tvar legendData = [];\n\t\tdataRaw.map(row => {legendData.push(R.pick([category, 'color'], row));});\n\t\treturn legendData;\n};\n\nexport const intersections =(circlesData)=> R.pipe(\n\t    \tR.groupBy(({y, x}) => (y + x)),\n\t    \tR.filter(R.compose(R.lt(1), R.length)),\n\t    \tR.map(R.head),\n\t    \tR.values\n\t\t)(circlesData);\nexport const defaultColor=(color) =>{\n\t\treturn  (color!==undefined)?color:defaultLegendColor;\n};"]},"metadata":{},"sourceType":"module"}