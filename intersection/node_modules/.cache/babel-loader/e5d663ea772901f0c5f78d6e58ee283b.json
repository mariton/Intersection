{"ast":null,"code":"import _slicedToArray from \"/Users/marinas/WORK/GIT/ReactD3-projects/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/my-app/src/ReactDims.js\";\nimport React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nconst ReactDims = React.createContext(null);\n\nconst _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\nconst domNode = useRef(null);\n\nconst _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      timeoutID = _useState4[0],\n      newTimeoutID = _useState4[1];\n\nconst getNodeDimensions = () => {\n  clearTimeout(timeoutID);\n  newTimeoutID(setTimeout(() => {\n    setDimensions(domNode.current.getBoundingClientRect());\n  }, 300));\n};\n\nexport const Provider = props => {\n  useEffect(() => {\n    window.addEventListener('resize', getNodeDimensions);\n    return () => {\n      window.removeEventListener('resize', getNodeDimensions);\n    };\n  }, []);\n  return React.createElement(\"div\", {\n    ref: domNode,\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(ReactDims.Provider, {\n    value: dimensions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.children));\n}; // here is the consumer;\n\nexport const withContext = ChildComponent => {\n  return props => React.createElement(ReactDims.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, incomingDims => React.createElement(ChildComponent, Object.assign({}, props, {\n    dims: incomingDims,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/my-app/src/ReactDims.js"],"names":["React","useRef","useState","useEffect","ReactDims","createContext","dimensions","setDimensions","domNode","timeoutID","newTimeoutID","getNodeDimensions","clearTimeout","setTimeout","current","getBoundingClientRect","Provider","props","window","addEventListener","removeEventListener","height","children","withContext","ChildComponent","incomingDims"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,MAAMC,SAAS,GAAGJ,KAAK,CAACK,aAAN,CAAoB,IAApB,CAAlB;;kBAGoCH,QAAQ,CAAC,EAAD,C;;MAArCI,U;MAAYC,a;;AAEjB,MAAMC,OAAO,GAAGP,MAAM,CAAC,IAAD,CAAtB;;mBACkCC,QAAQ,CAAC,CAAD,C;;MAAnCO,S;MAAWC,Y;;AAElB,MAAMC,iBAAiB,GAAG,MAAI;AAC1BC,EAAAA,YAAY,CAACH,SAAD,CAAZ;AACAC,EAAAA,YAAY,CAACG,UAAU,CAAC,MAAI;AACzBN,IAAAA,aAAa,CAACC,OAAO,CAACM,OAAR,CAAgBC,qBAAhB,EAAD,CAAb;AACA,GAFoB,EAElB,GAFkB,CAAX,CAAZ;AAID,CANH;;AASF,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAS;AAE/Bd,EAAAA,SAAS,CAAC,MAAI;AACbe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCR,iBAAlC;AACA,WAAO,MAAI;AAAEO,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCT,iBAArC;AAAwD,KAArE;AACD,GAHS,EAGP,EAHO,CAAT;AAKA,SACE;AAAK,IAAA,GAAG,EAAEH,OAAV;AAAmB,IAAA,KAAK,EAAE;AAACa,MAAAA,MAAM,EAAE;AAAT,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEf,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGW,KAAK,CAACK,QADT,CADF,CADF;AAOD,CAdM,C,CAiBP;;AACA,OAAO,MAAMC,WAAW,GAAEC,cAAD,IAAkB;AACvC,SAAQP,KAAD,IACH,oBAAC,SAAD,CAAW,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIQ,YAAD,IAAiB,oBAAC,cAAD,oBAAoBR,KAApB;AAA2B,IAAA,IAAI,EAAEQ,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADpB,CADJ;AAKH,CANM","sourcesContent":["import React from 'react';\nimport { useRef, useState, useEffect } from 'react';\n\nconst ReactDims = React.createContext(null);\n\n\nconst [dimensions, setDimensions] = useState({});\n  \n  const domNode = useRef(null); \n  const [timeoutID, newTimeoutID] = useState(0);\n\n  const getNodeDimensions = ()=>{\n      clearTimeout(timeoutID);\n      newTimeoutID(setTimeout(()=>{\n         setDimensions(domNode.current.getBoundingClientRect());\n        }, 300)\n      );\n    };\n\n\nexport const Provider = (props)=>{   \n\n  useEffect(()=>{\n   window.addEventListener('resize', getNodeDimensions);\n   return ()=>{ window.removeEventListener('resize', getNodeDimensions)};\n }, []);\n\n  return (\n    <div ref={domNode} style={{height: \"100%\"}} >\n      <ReactDims.Provider value={dimensions}>\n        {props.children}\n      </ReactDims.Provider>\n    </div>\n    )\n};\n\n\n// here is the consumer;\nexport const withContext=(ChildComponent)=>{\n    return (props)=>(\n        <ReactDims.Consumer>\n          {(incomingDims)=>(<ChildComponent {...props} dims={incomingDims} />)}\n        </ReactDims.Consumer>\n    )\n};"]},"metadata":{},"sourceType":"module"}