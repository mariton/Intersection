{"ast":null,"code":"import 'd3-selection';\nimport 'd3-transition';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\n\nclass Circles {\n  constructor(chart, data, scales) {\n    this.updateData = newData => {\n      this.data = newData;\n      this.allCircles = this.chart.selectAll('.myCircle').data(this.data);\n      this.allCircles.transition().duration(1000).attr('cx', (d, i) => this.scales.xScale(d[\"column\"], d[\"rowKey\"])).attr('cy', d => this.scales.yScale(d[\"rowKey\"])).attr('fill', d => d[\"color\"]).on('mouseover', tip.show).on('mouseout', tip.hide);\n      this.enter();\n    };\n\n    this.enter = () => {\n      this.allCircles.enter().append('circle').attr('class', 'myCircle').attr('cx', (d, i) => this.scales.xScale(d[\"column\"], d[\"rowKey\"])).attr('cy', d => this.scales.yScale(d[\"rowKey\"])).attr('r', d => d[\"value\"] * 3).attr('fill', d => d[\"color\"]).attr(\"opacity\", 0.8).on(\"mouseover\", function (d) {\n        tip.show(d, this);\n      }).on('mouseout', tip.hide);\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allCircles.exit().remove();\n    };\n\n    this.updateScales = newScales => {\n      this.scales = newScales;\n      this.allCircles = this.chart.selectAll('.myCircle').prototype.transition().duration(500).attr('cx', (d, i) => this.scales.xScale(d[\"column\"], d[\"rowKey\"])).attr('cy', d => this.scales.yScale(d[\"rowKey\"]));\n    };\n\n    this.chart = chart;\n    this.scales = scales;\n\n    const _tip = d3Tip().html(function (d) {\n      return d;\n    });\n\n    d3.select(this.chart.svg).call(_tip);\n    this.updateData(data);\n  }\n\n}\n\n;\nexport default Circles;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/utilities/Circles.js"],"names":["d3","d3Tip","Circles","constructor","chart","data","scales","updateData","newData","allCircles","selectAll","transition","duration","attr","d","i","xScale","yScale","on","tip","show","hide","enter","append","exit","remove","updateScales","newScales","prototype","html","select","svg","call"],"mappings":"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","sourcesContent":["import  'd3-selection';\nimport 'd3-transition';\nimport * as d3 from 'd3'\nimport d3Tip from 'd3-tip';\n\n\n\n\n\nclass Circles {\n  constructor(chart, data, scales){\n    this.chart = chart;\n    this.scales = scales;\n    const tip = d3Tip().html(function(d) { return d; });\n    d3.select(this.chart.svg).call(tip);\n    this.updateData(data);\n  };\n\n  updateData=(newData)=>{\n    this.data = newData;\n\n    this.allCircles =\n      this.chart.selectAll('.myCircle').data(this.data);\n    this.allCircles.transition().duration(1000)\n        .attr('cx', (d,i)=>this.scales.xScale(d[\"column\"],d[\"rowKey\"]))\n        .attr('cy', (d)=>this.scales.yScale(d[\"rowKey\"]))\n        .attr('fill', (d) => d[\"color\"])\n        .on('mouseover', tip.show)\n        .on('mouseout', tip.hide)\n    this.enter();\n  };\n  enter=()=>{\n\n    this.allCircles.enter()\n        .append('circle')\n        .attr('class', 'myCircle')\n        .attr('cx', (d,i)=>this.scales.xScale(d[\"column\"],d[\"rowKey\"]))\n        .attr('cy', (d)=>this.scales.yScale(d[\"rowKey\"]))\n        .attr('r', (d) => d[\"value\"] * 3)\n        .attr('fill', (d) => d[\"color\"])\n        .attr(\"opacity\", 0.8)\n        .on(\"mouseover\", function(d) {\n            tip.show(d, this);\n        })\n        .on('mouseout', tip.hide)\n\n        \n    this.exit();\n  };\n  exit=()=>{\n    this.allCircles.exit().remove();\n  };\n  updateScales=(newScales)=>{\n    this.scales = newScales;\n    this.allCircles =\n      this.chart.selectAll('.myCircle')\n        .prototype.transition().duration(500)\n          .attr('cx', (d,i)=>this.scales.xScale(d[\"column\"],d[\"rowKey\"]))\n          .attr('cy', (d)=>this.scales.yScale(d[\"rowKey\"]))\n  };\n};\nexport default Circles;"]},"metadata":{},"sourceType":"module"}