{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square, XAxis } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  renderxAxis(item, className = \"xAxis\") {\n    return React.createElement(XAxis, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  xAxis(items, className = \"xAxis\") {\n    const xScaleKey = 'column';\n    console.log(items);\n    const getXLabels = R.compose(R.map(R.prop(xScaleKey)), R.head, R.values);\n    const xLabels = getXLabels({\n      items\n    });\n    console.log(xLabels);\n    return xLabels;\n  }\n\n  getDatasource(dataRaw) {\n    return dataRaw.map(ds => ds.data);\n  }\n\n  render() {\n    var dsItems = this.getDatasource(this.props.data); //console.log(dsItems.map(row => (row.map(rowItems => (rowItems.items)))))\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, dsItems.map(rowItems => rowItems.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, row.rowKey), R.map(this.renderSquare, row.items)))), React.createElement(\"div\", {\n      className: \"board-row-axis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderSquare([], \"squareInvisible\"), R.map(this.renderxAxis, this.xAxis(dsItems.map(row => row.map(rowItems => rowItems.items))))));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","XAxis","R","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","renderxAxis","xAxis","items","xScaleKey","console","log","getXLabels","compose","map","prop","head","values","xLabels","getDatasource","dataRaw","ds","render","dsItems","rowItems","row","uniqueId","rowKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAA8B,aAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAGnBC,IAHmB,GAGd,CAACC,IAAD,EAAMC,IAAN,KAAc,CAElB,CALkB;AAElB;;AAIDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,SAAS,GAAC,QAAjB,EAA2B;AACtC,WAAO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAIC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACDC,EAAAA,WAAW,CAACF,IAAD,EAAOC,SAAS,GAAC,OAAjB,EAA0B;AACpC,WAAO,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAmB,MAAA,SAAS,EAAIC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AACDE,EAAAA,KAAK,CAACC,KAAD,EAAQH,SAAS,GAAC,OAAlB,EAA2B;AAC/B,UAAMI,SAAS,GAAG,QAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,UAAMI,UAAU,GAAGjB,CAAC,CAACkB,OAAF,CACjBlB,CAAC,CAACmB,GAAF,CAAMnB,CAAC,CAACoB,IAAF,CAAON,SAAP,CAAN,CADiB,EAEjBd,CAAC,CAACqB,IAFe,EAGjBrB,CAAC,CAACsB,MAHe,CAAnB;AAKA,UAAMC,OAAO,GAAGN,UAAU,CAAC;AAACJ,MAAAA;AAAD,KAAD,CAA1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYO,OAAZ;AACA,WAAOA,OAAP;AACA;;AAEDC,EAAAA,aAAa,CAACC,OAAD,EAAU;AAEtB,WAAOA,OAAO,CAACN,GAAR,CAAYO,EAAE,IAAKA,EAAE,CAACpB,IAAtB,CAAP;AACA;;AAEDqB,EAAAA,MAAM,GAAG;AACR,QAAIC,OAAO,GAAG,KAAKJ,aAAL,CAAmB,KAAKpB,KAAL,CAAWE,IAA9B,CAAd,CADQ,CAER;;AACA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECsB,OAAO,CAACT,GAAR,CAAYU,QAAQ,IAAKA,QAAQ,CAACV,GAAT,CAAaW,GAAG,IACxC;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAG,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,GAAG,CAACE,MADN,CADD,EAIEhC,CAAC,CAACmB,GAAF,CAAM,KAAKX,YAAX,EAAyBsB,GAAG,CAACjB,KAA7B,CAJF,CADwB,CAAzB,CAFD,EAYC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKL,YAAL,CAAkB,EAAlB,EAAsB,iBAAtB,CADF,EAGER,CAAC,CAACmB,GAAF,CAAM,KAAKR,WAAX,EAAwB,KAAKC,KAAL,CAAWgB,OAAO,CAACT,GAAR,CAAYW,GAAG,IAAKA,GAAG,CAACX,GAAJ,CAAQU,QAAQ,IAAKA,QAAQ,CAAChB,KAA9B,CAApB,CAAX,CAAxB,CAHF,CAZD,CADD;AAuBA;;AA1DmC;;AA2DpC;AACD,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport { Square , XAxis} from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\trenderxAxis(item, className=\"xAxis\") {\n\t\treturn <XAxis item={item} className = {className} />;\n\t};\n\txAxis(items, className=\"xAxis\") {\n\t\tconst xScaleKey = 'column';\n\t\tconsole.log(items)\n\n\t\tconst getXLabels = R.compose(\n\t\t  R.map(R.prop(xScaleKey)), \n\t\t  R.head, \n\t\t  R.values\n\t\t)\n\t\tconst xLabels = getXLabels({items});\n\t\tconsole.log(xLabels);\n\t\treturn xLabels;\n\t};\n\n\tgetDatasource(dataRaw) {\n\t\t\n\t\treturn dataRaw.map(ds => (ds.data))\n\t}\n\n\trender() {\n\t\tvar dsItems = this.getDatasource(this.props.data)\n\t\t//console.log(dsItems.map(row => (row.map(rowItems => (rowItems.items)))))\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tdsItems.map(rowItems => (rowItems.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t<div className=\"yAxis\">\n\t\t\t\t\t\t\t{row.rowKey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t))))\n\t\t\t}\n\t\t\t\t<div className=\"board-row-axis\">\n\t\t\t\t\t{this.renderSquare([], \"squareInvisible\")}\n\t\t\t\t\t{ \n\t\t\t\t\t\tR.map(this.renderxAxis, this.xAxis(dsItems.map(row => (row.map(rowItems => (rowItems.items))))))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}