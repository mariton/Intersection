{"ast":null,"code":"import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component {\n  constructor(chart, options, dims, data, scales) {\n    super(chart, options);\n\n    this.updateData = newData => {\n      this.data = newData;\n      this.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n      this.allLegend.attr('cx', (d, i) => {\n        return d.x * i;\n      }).attr('cy', d => {\n        return d.y;\n      }).attr('fill', d => d.color);\n      this.enter();\n    };\n\n    this.enter = () => {\n      this.allLegend.enter().append('circle').attr('class', 'legendCircle').attr('cx', (d, i) => {\n        return d.x * i;\n      }).attr('cy', d => {\n        return d.y;\n      }).attr('r', d => 5).attr('fill', d => d.color).attr(\"opacity\", 0.8);\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allLegend.exit().remove();\n    };\n\n    this.chart = chart;\n    this.options = options;\n    this.dims = dims;\n    this.scales = scales;\n    this.legend = this.chart.append('g').attr('class', 'legend');\n    this.legend.append('rect').attr('x', this.dims.innerWidth).attr('y', this.dims.innerHeight - 100).attr('fill', '#efefef').attr('class', 'legend');\n    console.log(\"legend data\", this.data);\n    this.updateData(data);\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Legend.js"],"names":["React","Circles","Intersection","Legend","Component","constructor","chart","options","dims","data","scales","updateData","newData","allLegend","legend","selectAll","attr","d","i","x","y","color","enter","append","exit","remove","innerWidth","innerHeight","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,aAAtC;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AAC/C,UAAMJ,KAAN,EAAaC,OAAb;;AAD+C,SAqBhDI,UArBgD,GAqBlCC,OAAD,IAAa;AACzB,WAAKH,IAAL,GAAYG,OAAZ;AAEA,WAAKC,SAAL,GAAiB,KAAKC,MAAL,CAAYC,SAAZ,CAAsB,eAAtB,EAAuCN,IAAvC,CAA4C,KAAKA,IAAjD,CAAjB;AACA,WAAKI,SAAL,CACOG,IADP,CACY,IADZ,EACkB,CAACC,CAAD,EAAGC,CAAH,KAAO;AAAC,eAAOD,CAAC,CAACE,CAAF,GAAID,CAAX;AAAc,OADxC,EAEOF,IAFP,CAEY,IAFZ,EAEmBC,CAAD,IAAK;AAAE,eAAOA,CAAC,CAACG,CAAT;AAAY,OAFrC,EAGOJ,IAHP,CAGY,MAHZ,EAGqBC,CAAD,IAAOA,CAAC,CAACI,KAH7B;AAIE,WAAKC,KAAL;AAEF,KA/B+C;;AAAA,SAiChDA,KAjCgD,GAiCxC,MAAM;AACb,WAAKT,SAAL,CAAeS,KAAf,GACQC,MADR,CACe,QADf,EAEQP,IAFR,CAEa,OAFb,EAEsB,cAFtB,EAGQA,IAHR,CAGa,IAHb,EAGmB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAAE,eAAOD,CAAC,CAACE,CAAF,GAAID,CAAX;AAAc,OAH3C,EAIQF,IAJR,CAIa,IAJb,EAIoBC,CAAD,IAAK;AAAE,eAAOA,CAAC,CAACG,CAAT;AAAY,OAJtC,EAKQJ,IALR,CAKa,GALb,EAKmBC,CAAD,IAAO,CALzB,EAMQD,IANR,CAMa,MANb,EAMsBC,CAAD,IAAOA,CAAC,CAACI,KAN9B,EAOQL,IAPR,CAOa,SAPb,EAOwB,GAPxB;AAQM,WAAKQ,IAAL;AACN,KA3C+C;;AAAA,SA4ChDA,IA5CgD,GA4C3C,MAAI;AACL,WAAKX,SAAL,CAAeW,IAAf,GAAsBC,MAAtB;AACH,KA9C+C;;AAE/C,SAAKnB,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAcA,MAAd;AAEA,SAAKI,MAAL,GAAc,KAAKR,KAAL,CAAWiB,MAAX,CAAkB,GAAlB,EAAuBP,IAAvB,CAA4B,OAA5B,EAAqC,QAArC,CAAd;AAEA,SAAKF,MAAL,CACES,MADF,CACS,MADT,EAEEP,IAFF,CAEO,GAFP,EAEY,KAAKR,IAAL,CAAUkB,UAFtB,EAGEV,IAHF,CAGO,GAHP,EAGY,KAAKR,IAAL,CAAUmB,WAAV,GAAwB,GAHpC,EAIEX,IAJF,CAIO,MAJP,EAIe,SAJf,EAKEA,IALF,CAKO,OALP,EAKgB,QALhB;AAMAY,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKpB,IAAhC;AAGA,SAAKE,UAAL,CAAgBF,IAAhB;AACA;;AApBkC;;AAmDpC,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component{\n\tconstructor(chart, options, dims, data, scales) {\n\t\tsuper(chart, options);\n\t\tthis.chart = chart;\n\t\tthis.options = options;\n\t\tthis.dims = dims;\n\t\tthis.scales = scales;\n\n\t\tthis.legend = this.chart.append('g').attr('class', 'legend');\n\t\t\t\n\t\tthis.legend\n\t\t\t.append('rect')\n\t\t\t.attr('x', this.dims.innerWidth )\n\t\t\t.attr('y', this.dims.innerHeight - 100)\n\t\t\t.attr('fill', '#efefef')\n\t\t\t.attr('class', 'legend'); \n\t\tconsole.log(\"legend data\", this.data);\n\n\n\t\tthis.updateData(data);\n\t};\n\n\tupdateData = (newData) => {\n\t\tthis.data = newData;\n\n\t\tthis.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n\t\tthis.allLegend\n        .attr('cx', (d,i)=>{return d.x*i })\n        .attr('cy', (d)=>{ return d.y })\n        .attr('fill', (d) => d.color)\n    this.enter();\n\n\t};\n\n\tenter = () => {\n\t\tthis.allLegend.enter()\n\t        .append('circle')\n\t        .attr('class', 'legendCircle')\n\t        .attr('cx', (d,i)=> { return d.x*i })\n\t        .attr('cy', (d)=>{ return d.y })\n\t        .attr('r', (d) => 5)\n\t        .attr('fill', (d) => d.color)\n\t        .attr(\"opacity\", 0.8)\n        this.exit();\n\t};\n\texit=()=>{\n\t    this.allLegend.exit().remove();\n\t};\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}