{"ast":null,"code":"import React from 'react';\nimport { Circles, Intersection, Dimensions } from './utilities';\nimport { defaultColor, defaultColorObj } from './functions';\n\nclass Legend extends React.Component {\n  constructor(chart, options, _dims, _data, scales) {\n    super(chart, options);\n\n    this.createLegend = data => {\n      this.dimLegend = new Dimensions({\n        width: this.options.width,\n        height: this.options.height\n      }); //Set position for Legend, only right with top and bottom alignment\n\n      var legendPosition = this.setPosition(); //Create G group for Legend\n\n      this.legend = this.chart.append('g').attr('transform', \"translate(\".concat(legendPosition.innerWidth, \", \").concat(legendPosition.innerHeight, \")\")).attr('class', 'legend').style('width', this.options.width).style('height', this.options.height).style('float', 'left'); //Add legend Title\t\n\n      this.legend.append('text').text(this.options.title).attr('x', 5).attr('y', -this.dimLegend.height).attr('class', 'legendTitle').style('fill', this.options.fontColor); //Add Matrix Intersection mark to legend\n\n      var legendIntersectionObj = {};\n      legendIntersectionObj[this.options.category] = this.options.labelIntersection;\n      legendIntersectionObj['color'] = defaultColor(this.options.colorIntersection, 'intersection').intersection;\n      if (this.options.showIntersection) data.push(legendIntersectionObj);\n      this.updateData(data);\n    };\n\n    this.setPosition = () => {\n      let legendPosition = new Dimensions(this.dimLegend);\n\n      if (this.options.position.toLowerCase() === 'right' && this.options.align.toLowerCase() === 'bottom') {\n        legendPosition.innerWidth = this.dims.innerWidth;\n        legendPosition.innerHeight = this.dims.innerHeight;\n      } else if (this.options.position.toLowerCase() === 'right' && this.options.align.toLowerCase() === 'top') {\n        legendPosition.innerWidth = this.dims.innerWidth;\n        legendPosition.innerHeight = this.dimLegend.height;\n      } else {\n        legendPosition.innerWidth = this.dims.innerWidth;\n        legendPosition.innerHeight = this.dims.innerHeight;\n      } //need to translate charts (0,0) position for the left positioning\n      // else if ((this.options.position.toLowerCase() == 'left') && (this.options.align.toLowerCase() == 'bottom'))\n      // {\n      // \tlegendPosition.innerWidth = -this.dimLegend.width;\n      // \tlegendPosition.innerHeight = this.dims.innerHeight;\n      // }\n\n\n      return legendPosition;\n    };\n\n    this.updateData = newData => {\n      this.data = newData;\n      this.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n      this.allLegend.attr('cx', d => {\n        return 10;\n      }).attr('cy', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1);\n      }).attr('fill', d => d.color !== undefined ? d.color : defaultColorObj.mark);\n      this.enter();\n    };\n\n    this.updateScales = (data, dims) => {\n      this.dims = dims;\n      this.scales = newScales;\n      this.createLegend(data);\n    };\n\n    this.enter = () => {\n      this.allLegend.enter().append('circle').attr('class', 'legendCircle').attr('cx', d => {\n        return 10;\n      }).attr('cy', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1);\n      }).attr('r', d => 7).attr('fill', d => {\n        return d.color !== undefined ? d.color : defaultColorObj.mark;\n      }).attr(\"opacity\", 0.8);\n      this.allLegend.enter().append('text').text(d => {\n        return d[this.options.category];\n      }).attr('x', 20).attr('y', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1) + 3;\n      }).attr('class', 'legendText').style('fill', this.options.fontColor);\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allLegend.exit().remove();\n    };\n\n    this.chart = chart;\n    this.options = options;\n    this.dims = _dims;\n    this.scales = scales;\n    this.createLegend(_data);\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Legend.js"],"names":["React","Circles","Intersection","Dimensions","defaultColor","defaultColorObj","Legend","Component","constructor","chart","options","dims","data","scales","createLegend","dimLegend","width","height","legendPosition","setPosition","legend","append","attr","innerWidth","innerHeight","style","text","title","fontColor","legendIntersectionObj","category","labelIntersection","colorIntersection","intersection","showIntersection","push","updateData","position","toLowerCase","align","newData","allLegend","selectAll","d","i","color","undefined","mark","enter","updateScales","newScales","exit","remove"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Circles, Intersection, Dimensions } from './utilities';\nimport { defaultColor,defaultColorObj}  from './functions';\n\nclass Legend extends React.Component{\n\tconstructor(chart, options, dims, data, scales) {\n\t\tsuper(chart, options);\n\t\tthis.chart = chart;\n\t\tthis.options = options;\n\t\tthis.dims = dims;\n\t\tthis.scales = scales;\n\t\tthis.createLegend(data);\n\t\t\n\t};\n\tcreateLegend = (data) =>{\n\t\tthis.dimLegend = new Dimensions({width:this.options.width, height:this.options.height});\n\n\t\t//Set position for Legend, only right with top and bottom alignment\n\t\tvar legendPosition = this.setPosition();\n\n\t\t//Create G group for Legend\n\t\tthis.legend = this.chart.append('g').attr('transform', `translate(${legendPosition.innerWidth}, ${legendPosition.innerHeight})`)\n\t\t\t.attr('class', 'legend')\n\t\t\t.style('width', this.options.width)\n\t\t\t.style('height', this.options.height)\n\t\t\t.style('float', 'left');\n\n\t\t//Add legend Title\t\n\t\tthis.legend.append('text')\n\t        .text(this.options.title)\n\t        .attr('x', 5)\n\t        .attr('y', -(this.dimLegend.height))\n\t        .attr('class', 'legendTitle')\n\t        .style('fill', this.options.fontColor);\n\n\n\t    //Add Matrix Intersection mark to legend\n\t\tvar legendIntersectionObj ={};\n\t\tlegendIntersectionObj[this.options.category] = this.options.labelIntersection;\n\t\tlegendIntersectionObj['color'] = defaultColor(this.options.colorIntersection, 'intersection').intersection;\n\t\t\n\t\tif (this.options.showIntersection)\n\t\t\tdata.push(legendIntersectionObj);\n\t\tthis.updateData(data);\n\n\t}\n\n\tsetPosition = () =>{\n\t\tlet legendPosition = new Dimensions(this.dimLegend);\n\t\tif ((this.options.position.toLowerCase() === 'right') && (this.options.align.toLowerCase() === 'bottom'))\n\t\t{\n\t\t\tlegendPosition.innerWidth = this.dims.innerWidth;\n\t\t\tlegendPosition.innerHeight = this.dims.innerHeight;\n\t\t}\n\t\telse if ((this.options.position.toLowerCase() === 'right') && (this.options.align.toLowerCase() === 'top'))\n\t\t{\n\t\t\tlegendPosition.innerWidth = this.dims.innerWidth;\n\t\t\tlegendPosition.innerHeight = this.dimLegend.height;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tlegendPosition.innerWidth = this.dims.innerWidth;\n\t\t\tlegendPosition.innerHeight = this.dims.innerHeight;\n\n\t\t}\n\t\t//need to translate charts (0,0) position for the left positioning\n\t\t// else if ((this.options.position.toLowerCase() == 'left') && (this.options.align.toLowerCase() == 'bottom'))\n\t\t// {\n\t\t// \tlegendPosition.innerWidth = -this.dimLegend.width;\n\t\t// \tlegendPosition.innerHeight = this.dims.innerHeight;\n\t\t// }\n\t\treturn legendPosition;\n\t};\n\n\tupdateData = (newData) => {\n\t\tthis.data = newData;\n\n\t\tthis.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n\t\tthis.allLegend\n\t        .attr('cx', (d) => {return 10})\n\t        .attr('cy', (d,i) => {return -this.dimLegend.height + 20 * (i+1)})\n\t        .attr('fill', (d) => (d.color!==undefined)?d.color:defaultColorObj.mark)\n   \t\tthis.enter();\n\t};\n\t updateScales=(data, dims)=>{\n\t    this.dims = dims;\n\t    this.scales = newScales;\n\t    this.createLegend(data);\n\n\t};\n\n\tenter = () => {\n\t\t\n\t\tthis.allLegend.enter()\n\t        .append('circle')\n\t        .attr('class', 'legendCircle')\n\t        .attr('cx', (d)=> {return 10})\n\t        .attr('cy', (d, i)=>{return -this.dimLegend.height+ 20*(i+1) })\n\t        .attr('r', (d) => 7)\n\t        .attr('fill', (d) => {return (d.color!==undefined)?d.color:defaultColorObj.mark})\n\t        .attr(\"opacity\", 0.8);\n\n\t    this.allLegend.enter().append('text')\n\t        .text((d) => {return d[this.options.category];})\n\t        .attr('x', 20)\n\t        .attr('y', (d, i)=>{return -this.dimLegend.height + 20*(i+1) + 3})\n\t        .attr('class', 'legendText')\n\t        .style('fill', this.options.fontColor);\n\n        this.exit();\n\t};\n\texit=()=>{\n\t    this.allLegend.exit().remove();\n\t};\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}