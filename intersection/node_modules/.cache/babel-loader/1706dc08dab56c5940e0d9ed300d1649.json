{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square, XAxis } from './utilities';\nimport * as R from 'ramda';\n\nconst xAxis = items => {\n  const xScaleKey = 'column';\n  const getXLabels = R.pipe(R.flatten, R.map(R.prop(xScaleKey)), R.uniq);\n  const xLabels = getXLabels(items);\n  return xLabels;\n};\n\nconst yAxis = items => {\n  const yScaleKey = 'rowKey';\n  console.log(\"items y\", items.map(row => row.rowKey));\n  const getYLabels = R.pipe(R.map(R.prop(yScaleKey)), R.uniq);\n  const yLabel = getYLabels(items);\n  console.log(yLabel);\n  return yLabel;\n};\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n  renderxAxis(item, className = \"xAxis\") {\n    return React.createElement(XAxis, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n  getDatasource(dataRaw) {\n    return dataRaw.map(ds => ds.data);\n  }\n\n  render() {\n    var dsItems = this.getDatasource(this.props.data);\n    console.log(\"row\", yAxis(dsItems.map(row => row)));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, dsItems.map(rowItems => rowItems.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, row.rowKey), R.map(this.renderSquare, row.items)))), React.createElement(\"div\", {\n      className: \"board-row-axis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.renderSquare([], \"squareInvisible\"), R.map(this.renderxAxis, xAxis(dsItems.map(row => row.map(rowItems => rowItems.items))))));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","XAxis","R","xAxis","items","xScaleKey","getXLabels","pipe","flatten","map","prop","uniq","xLabels","yAxis","yScaleKey","console","log","row","rowKey","getYLabels","yLabel","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","renderxAxis","getDatasource","dataRaw","ds","render","dsItems","rowItems","uniqueId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Square , XAxis} from './utilities';\nimport * as R from 'ramda';\n\nconst xAxis = (items) => {\n\tconst xScaleKey = 'column';\n\n\tconst getXLabels = R.pipe(\n\t\tR.flatten,\n\t\tR.map(R.prop(xScaleKey)),\n\t\tR.uniq\n\t\t)\n\n\tconst xLabels = getXLabels(items);\n\treturn xLabels;\n};\nconst yAxis = (items) => {\n\tconst yScaleKey = 'rowKey';\n\n\tconsole.log(\"items y\", items.map(row => (row.rowKey)))\n\n\tconst getYLabels = R.pipe(\n\t\tR.map(R.prop(yScaleKey)),\n\t\tR.uniq\n\t\t)\n\n\tconst yLabel = getYLabels(items)\n\tconsole.log(yLabel);\n\n\treturn yLabel;\n\n};\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\trenderxAxis(item, className=\"xAxis\") {\n\t\treturn <XAxis item={item} className = {className} />;\n\t};\n\t\n\n\tgetDatasource(dataRaw) {\n\t\t\n\t\treturn dataRaw.map(ds => (ds.data))\n\t}\n\n\trender() {\n\t\tvar dsItems = this.getDatasource(this.props.data)\n\t\tconsole.log(\"row\",yAxis(dsItems.map(row => (row))))\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tdsItems.map(rowItems => (rowItems.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t<div className=\"yAxis\">\n\t\t\t\t\t\t\t{row.rowKey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t))))\n\t\t\t}\n\t\t\t\t<div className=\"board-row-axis\">\n\t\t\t\t\t{this.renderSquare([], \"squareInvisible\")}\n\t\t\t\t\t{ \n\t\t\t\t\t\tR.map(this.renderxAxis, xAxis(dsItems.map(row => (row.map(rowItems => (rowItems.items))))))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}