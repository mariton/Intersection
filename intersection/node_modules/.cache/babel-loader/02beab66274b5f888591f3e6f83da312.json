{"ast":null,"code":"import React from 'react';\nimport { Square, Dimensions, Scales, Axes, Circles } from './utilities';\nimport * as R from 'ramda';\nimport { select } from 'd3-selection';\n\nclass Matrix extends React.Component {\n  constructor(domNodeCurrent, props) {\n    super(props);\n\n    this.init = (data, dims) => {\n      this.data = data;\n      this.dims = new Dimensions(dims);\n      this.chart = this.svg.append('g');\n      this.chart.attr('transform', \"translate(\".concat(this.dims.margin.left, \", \").concat(this.dims.margin.top, \")\"));\n      this.scales = new Scales(this.data, this.dims); //\n\n      this.axes = new Axes(this.chart, this.scales, this.dims);\n      this.circles = new Circles(this.chart, this.data, this.scales);\n    };\n\n    this.updateData = data => {\n      this.circles.updateData(data);\n    };\n\n    this.updateDims = dims => {\n      this.dims.setDims(dims);\n      this.scales.setScales(this.data, this.dims);\n      this.axes.updateAxes(this.scales, this.dims);\n      this.circles.updateScales(this.scales);\n    };\n\n    this.svg = select(domNodeCurrent).append('svg');\n    this.svg.attr('width', '100%').attr('height', '100%');\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","Dimensions","Scales","Axes","Circles","R","select","Matrix","Component","constructor","domNodeCurrent","props","init","data","dims","chart","svg","append","attr","margin","left","top","scales","axes","circles","updateData","updateDims","setDims","setScales","updateAxes","updateScales"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,OAA3C,QAA0D,aAA1D;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAEpCC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwB;AAClC,UAAMA,KAAN;;AADkC,SAKnCC,IALmC,GAK9B,CAACC,IAAD,EAAOC,IAAP,KAAc;AAClB,WAAKD,IAAL,GAAYA,IAAZ;AACG,WAAKC,IAAL,GAAY,IAAIb,UAAJ,CAAea,IAAf,CAAZ;AACA,WAAKC,KAAL,GAAa,KAAKC,GAAL,CAASC,MAAT,CAAgB,GAAhB,CAAb;AACA,WAAKF,KAAL,CAAWG,IAAX,CAAgB,WAAhB,sBAA0C,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,IAA3D,eAAoE,KAAKN,IAAL,CAAUK,MAAV,CAAiBE,GAArF;AACA,WAAKC,MAAL,GAAc,IAAIpB,MAAJ,CAAW,KAAKW,IAAhB,EAAsB,KAAKC,IAA3B,CAAd,CALe,CAKgC;;AAC/C,WAAKS,IAAL,GAAY,IAAIpB,IAAJ,CAAS,KAAKY,KAAd,EAAqB,KAAKO,MAA1B,EAAkC,KAAKR,IAAvC,CAAZ;AACA,WAAKU,OAAL,GAAe,IAAIpB,OAAJ,CAAY,KAAKW,KAAjB,EAAwB,KAAKF,IAA7B,EAAmC,KAAKS,MAAxC,CAAf;AACH,KAbkC;;AAAA,SAenCG,UAfmC,GAevBZ,IAAD,IAAQ;AAClB,WAAKW,OAAL,CAAaC,UAAb,CAAwBZ,IAAxB;AACA,KAjBkC;;AAAA,SAmBnCa,UAnBmC,GAmBvBZ,IAAD,IAAQ;AAClB,WAAKA,IAAL,CAAUa,OAAV,CAAkBb,IAAlB;AACA,WAAKQ,MAAL,CAAYM,SAAZ,CAAsB,KAAKf,IAA3B,EAAiC,KAAKC,IAAtC;AACA,WAAKS,IAAL,CAAUM,UAAV,CAAqB,KAAKP,MAA1B,EAAkC,KAAKR,IAAvC;AACA,WAAKU,OAAL,CAAaM,YAAb,CAA0B,KAAKR,MAA/B;AACA,KAxBkC;;AAElC,SAAKN,GAAL,GAAWV,MAAM,CAACI,cAAD,CAAN,CAAuBO,MAAvB,CAA8B,KAA9B,CAAX;AACA,SAAKD,GAAL,CAASE,IAAT,CAAc,OAAd,EAAuB,MAAvB,EAA+BA,IAA/B,CAAoC,QAApC,EAA8C,MAA9C;AACA;;AANmC;;AA6BpC;AACD,eAAeX,MAAf","sourcesContent":["import React from 'react';\nimport { Square, Dimensions, Scales, Axes, Circles } from './utilities';\nimport * as R from 'ramda';\nimport { select } from 'd3-selection';\n\nclass Matrix extends React.Component {\n\n\tconstructor(domNodeCurrent, props) {\n\t\tsuper(props);\n\t\tthis.svg = select(domNodeCurrent).append('svg');\n\t\tthis.svg.attr('width', '100%').attr('height', '100%');\n\t};\n\tinit=(data, dims)=>{\n\t\tthis.data = data;\n\t    this.dims = new Dimensions(dims); \n\t    this.chart = this.svg.append('g');\n\t    this.chart.attr('transform', `translate(${this.dims.margin.left}, ${this.dims.margin.top})`);\n\t    this.scales = new Scales(this.data, this.dims);//\n\t    this.axes = new Axes(this.chart, this.scales, this.dims);\n\t    this.circles = new Circles(this.chart, this.data, this.scales);\n\t};\n\n\tupdateData=(data)=>{\n\t\tthis.circles.updateData(data)\n\t};\n\n\tupdateDims=(dims)=>{\n\t\tthis.dims.setDims(dims);\n\t\tthis.scales.setScales(this.data, this.dims);\n\t\tthis.axes.updateAxes(this.scales, this.dims);\n\t\tthis.circles.updateScales(this.scales);\n\t};\n\t\n\t\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}