{"ast":null,"code":"import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component {\n  constructor(chart, options, dims, data, scales) {\n    super(chart, options);\n\n    this.updateData = newData => {\n      this.data = newData;\n      this.allLegend = this.chart.selectAll('legendCircle').data(this.data);\n    };\n\n    this.enter = () => {\n      console.log(\"intra\");\n      this.chart.append('g').attr('class', 'legend');\n      this.chart.selectAll('g .legend').append('rect').attr('x', this.dims.innerWidth).attr('y', this.dims.innerHeight - 100).attr('fill', '#efefef').attr('class', 'legend');\n      console.log(\"legend data\", this.data);\n      this.chart.selectAll('rect .legend').append('circle').attr('class', 'legendCircle').attr('cx', (d, i) => this.scales.xScale(d[\"column\"], d[\"rowKey\"])).attr('cy', d => this.scales.yScale(d[\"rowKey\"])).attr('r', d => d[\"value\"] * 3).attr('fill', d => d[\"color\"]).attr(\"opacity\", 0.8);\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allCircles.exit().remove();\n    };\n\n    this.chart = chart;\n    this.options = options;\n    this.dims = dims;\n    this.data = data;\n    this.scales = scales;\n    this.enter();\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Legend.js"],"names":["React","Circles","Intersection","Legend","Component","constructor","chart","options","dims","data","scales","updateData","newData","allLegend","selectAll","enter","console","log","append","attr","innerWidth","innerHeight","d","i","xScale","yScale","exit","allCircles","remove"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,aAAtC;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AAC/C,UAAMJ,KAAN,EAAaC,OAAb;;AAD+C,SAUhDI,UAVgD,GAUlCC,OAAD,IAAa;AACzB,WAAKH,IAAL,GAAYG,OAAZ;AACA,WAAKC,SAAL,GAAiB,KAAKP,KAAL,CAAWQ,SAAX,CAAqB,cAArB,EAAqCL,IAArC,CAA0C,KAAKA,IAA/C,CAAjB;AAEA,KAd+C;;AAAA,SAgBhDM,KAhBgD,GAgBxC,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAKX,KAAL,CAAWY,MAAX,CAAkB,GAAlB,EACEC,IADF,CACO,OADP,EACgB,QADhB;AAIA,WAAKb,KAAL,CAAWQ,SAAX,CAAqB,WAArB,EACEI,MADF,CACS,MADT,EAEEC,IAFF,CAEO,GAFP,EAEY,KAAKX,IAAL,CAAUY,UAFtB,EAGED,IAHF,CAGO,GAHP,EAGY,KAAKX,IAAL,CAAUa,WAAV,GAAwB,GAHpC,EAIEF,IAJF,CAIO,MAJP,EAIe,SAJf,EAKEA,IALF,CAKO,OALP,EAKgB,QALhB;AAOAH,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKR,IAAhC;AAEA,WAAKH,KAAL,CAAWQ,SAAX,CAAqB,cAArB,EACEI,MADF,CACS,QADT,EAEKC,IAFL,CAEU,OAFV,EAEmB,cAFnB,EAGKA,IAHL,CAGU,IAHV,EAGgB,CAACG,CAAD,EAAGC,CAAH,KAAO,KAAKb,MAAL,CAAYc,MAAZ,CAAmBF,CAAC,CAAC,QAAD,CAApB,EAA+BA,CAAC,CAAC,QAAD,CAAhC,CAHvB,EAIKH,IAJL,CAIU,IAJV,EAIiBG,CAAD,IAAK,KAAKZ,MAAL,CAAYe,MAAZ,CAAmBH,CAAC,CAAC,QAAD,CAApB,CAJrB,EAKKH,IALL,CAKU,GALV,EAKgBG,CAAD,IAAOA,CAAC,CAAC,OAAD,CAAD,GAAa,CALnC,EAMKH,IANL,CAMU,MANV,EAMmBG,CAAD,IAAOA,CAAC,CAAC,OAAD,CAN1B,EAOKH,IAPL,CAOU,SAPV,EAOqB,GAPrB;AASM,WAAKO,IAAL;AACN,KAzC+C;;AAAA,SA0ChDA,IA1CgD,GA0C3C,MAAI;AACL,WAAKC,UAAL,CAAgBD,IAAhB,GAAuBE,MAAvB;AACH,KA5C+C;;AAE/C,SAAKtB,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKK,KAAL;AACA;;AATkC;;AAiDpC,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport { Circles, Intersection } from './utilities';\n\nclass Legend extends React.Component{\n\tconstructor(chart, options, dims, data, scales) {\n\t\tsuper(chart, options);\n\t\tthis.chart = chart;\n\t\tthis.options = options;\n\t\tthis.dims = dims;\n\t\tthis.data = data;\n\t\tthis.scales = scales;\n\t\tthis.enter();\n\t};\n\n\tupdateData = (newData) => {\n\t\tthis.data = newData;\n\t\tthis.allLegend = this.chart.selectAll('legendCircle').data(this.data);\n\n\t};\n\n\tenter = () => {\n\t\tconsole.log(\"intra\");\n\t\tthis.chart.append('g')\n\t\t\t.attr('class', 'legend');\n\t\t\t\n\t\t\n\t\tthis.chart.selectAll('g .legend')\n\t\t\t.append('rect')\n\t\t\t.attr('x', this.dims.innerWidth )\n\t\t\t.attr('y', this.dims.innerHeight - 100)\n\t\t\t.attr('fill', '#efefef')\n\t\t\t.attr('class', 'legend'); \n\n\t\tconsole.log(\"legend data\", this.data);\n\n\t\tthis.chart.selectAll('rect .legend')\n\t\t\t.append('circle')\n\t\t    .attr('class', 'legendCircle')\n\t\t    .attr('cx', (d,i)=>this.scales.xScale(d[\"column\"],d[\"rowKey\"]))\n\t\t    .attr('cy', (d)=>this.scales.yScale(d[\"rowKey\"]))\n\t\t    .attr('r', (d) => d[\"value\"] * 3)\n\t\t    .attr('fill', (d) => d[\"color\"])\n\t\t    .attr(\"opacity\", 0.8);\n\n        this.exit();\n\t};\n\texit=()=>{\n\t    this.allCircles.exit().remove();\n\t};\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}