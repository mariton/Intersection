{"ast":null,"code":"import { axisBottom, axisLeft } from 'd3-axis';\n\nclass Axes {\n  constructor(_parent, _scales, _dims) {\n    this.createAxes = (parent, scales, dims) => {\n      this.scaleAxes(scales, dims);\n      this.xAxisBottomG = parent.append('g').attr('transform', \"translate(0, \".concat(dims.innerHeight, \")\")).call(this.xAxisBottom).selectAll(\".tick text\").attr(\"x\", -dims.innerHeight / 10).attr('class', 'axis');\n      this.lines = parent.append('g').selectAll(\".tick line\").attr('class', 'lineGrid');\n      this.yAxisLeftG = parent.append('g').call(this.yAxisLeft).selectAll(\".tick text\").attr(\"dy\", -30).attr('class', 'axis');\n    };\n\n    this.scaleAxes = (scales, dims) => {\n      this.xAxisBottom = axisBottom().scale(scales.xScale).tickSize(-dims.innerHeight).tickPadding(10);\n      this.yAxisLeft = axisLeft().scale(scales.yScale).tickSize(-dims.innerWidth);\n    };\n\n    this.updateAxes = (scales, dims) => {\n      this.scaleAxes(scales, dims);\n      this.xAxisBottomG.attr('transform', \"translate(0, \".concat(dims.innerHeight, \")\")).call(this.xAxisBottom).attr('class', 'axis');\n      this.yAxisLeftG.call(this.yAxisLeft);\n    };\n\n    this.createAxes(_parent, _scales, _dims);\n  }\n\n}\n\n;\nexport default Axes;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/utilities/Axes.js"],"names":["axisBottom","axisLeft","Axes","constructor","parent","scales","dims","createAxes","scaleAxes","xAxisBottomG","append","attr","innerHeight","call","xAxisBottom","selectAll","lines","yAxisLeftG","yAxisLeft","scale","xScale","tickSize","tickPadding","yScale","innerWidth","updateAxes"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,SAArC;;AACA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,OAAD,EAASC,OAAT,EAAiBC,KAAjB,EAAsB;AAAA,SAGjCC,UAHiC,GAGtB,CAACH,MAAD,EAASC,MAAT,EAAiBC,IAAjB,KAAwB;AACjC,WAAKE,SAAL,CAAeH,MAAf,EAAuBC,IAAvB;AACA,WAAKG,YAAL,GACEL,MAAM,CAACM,MAAP,CAAc,GAAd,EACGC,IADH,CACQ,WADR,yBACqCL,IAAI,CAACM,WAD1C,QAEGC,IAFH,CAEQ,KAAKC,WAFb,EAGGC,SAHH,CAGa,YAHb,EAIGJ,IAJH,CAIQ,GAJR,EAIa,CAACL,IAAI,CAACM,WAAN,GAAkB,EAJ/B,EAKGD,IALH,CAKQ,OALR,EAKiB,MALjB,CADF;AAQA,WAAKK,KAAL,GAAaZ,MAAM,CAACM,MAAP,CAAc,GAAd,EACEK,SADF,CACY,YADZ,EAEEJ,IAFF,CAEO,OAFP,EAEgB,UAFhB,CAAb;AAGA,WAAKM,UAAL,GACEb,MAAM,CAACM,MAAP,CAAc,GAAd,EACGG,IADH,CACQ,KAAKK,SADb,EAEGH,SAFH,CAEa,YAFb,EAGGJ,IAHH,CAGQ,IAHR,EAGc,CAAC,EAHf,EAIGA,IAJH,CAIQ,OAJR,EAIiB,MAJjB,CADF;AAOD,KAvBgC;;AAAA,SAwBjCH,SAxBiC,GAwBvB,CAACH,MAAD,EAASC,IAAT,KAAgB;AACxB,WAAKQ,WAAL,GACEd,UAAU,GACPmB,KADH,CACSd,MAAM,CAACe,MADhB,EAEGC,QAFH,CAEY,CAACf,IAAI,CAACM,WAFlB,EAGGU,WAHH,CAGe,EAHf,CADF;AAMA,WAAKJ,SAAL,GACEjB,QAAQ,GACLkB,KADH,CACSd,MAAM,CAACkB,MADhB,EAEGF,QAFH,CAEY,CAACf,IAAI,CAACkB,UAFlB,CADF;AAID,KAnCgC;;AAAA,SAoCjCC,UApCiC,GAoCtB,CAACpB,MAAD,EAASC,IAAT,KAAgB;AACzB,WAAKE,SAAL,CAAeH,MAAf,EAAuBC,IAAvB;AACA,WAAKG,YAAL,CACGE,IADH,CACQ,WADR,yBACqCL,IAAI,CAACM,WAD1C,QAEGC,IAFH,CAEQ,KAAKC,WAFb,EAGGH,IAHH,CAGQ,OAHR,EAGiB,MAHjB;AAIA,WAAKM,UAAL,CACGJ,IADH,CACQ,KAAKK,SADb;AAED,KA5CgC;;AAC/B,SAAKX,UAAL,CAAgBH,OAAhB,EAAwBC,OAAxB,EAAgCC,KAAhC;AACD;;AAHQ;;AA8CV;AACD,eAAeJ,IAAf","sourcesContent":["import { axisBottom, axisLeft } from 'd3-axis';\nclass Axes {\n  constructor(parent, scales, dims){\n    this.createAxes(parent, scales, dims);\n  };\n  createAxes=(parent, scales, dims)=>{\n    this.scaleAxes(scales, dims);\n    this.xAxisBottomG =\n      parent.append('g')\n        .attr('transform', `translate(0, ${dims.innerHeight})`)\n        .call(this.xAxisBottom)\n        .selectAll(\".tick text\")\n        .attr(\"x\", -dims.innerHeight/10)\n        .attr('class', 'axis')\n\n    this.lines = parent.append('g')\n                  .selectAll(\".tick line\")\n                  .attr('class', 'lineGrid')\n    this.yAxisLeftG =\n      parent.append('g')\n        .call(this.yAxisLeft)\n        .selectAll(\".tick text\")\n        .attr(\"dy\", -30)\n        .attr('class', 'axis')\n        \n  };\n  scaleAxes=(scales, dims)=>{\n    this.xAxisBottom =\n      axisBottom()\n        .scale(scales.xScale)\n        .tickSize(-dims.innerHeight)\n        .tickPadding(10)\n        \n    this.yAxisLeft =\n      axisLeft()\n        .scale(scales.yScale)\n        .tickSize(-dims.innerWidth)\n  };\n  updateAxes=(scales, dims)=>{\n    this.scaleAxes(scales, dims);\n    this.xAxisBottomG\n      .attr('transform', `translate(0, ${dims.innerHeight})`)\n      .call(this.xAxisBottom)\n      .attr('class', 'axis')\n    this.yAxisLeftG\n      .call(this.yAxisLeft)\n  };\n};\nexport default Axes;"]},"metadata":{},"sourceType":"module"}