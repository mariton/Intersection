{"ast":null,"code":"import React from 'react';\nimport { Circles, Intersection, Dimensions } from './utilities';\n\nclass Legend extends React.Component {\n  constructor(chart, options, dims, data, scales) {\n    super(chart, options);\n\n    this.setPosition = () => {\n      let legendPosition = new Dimensions(this.dimLegend);\n\n      if (this.options.position.toLowerCase() == 'right' && this.options.align.toLowerCase() == 'bottom') {\n        legendPosition.innerWidth = this.dims.innerWidth;\n        legendPosition.innerHeight = this.dims.innerHeight;\n      } else if (this.options.position.toLowerCase() == 'right' && this.options.align.toLowerCase() == 'top') {\n        legendPosition.innerWidth = this.dims.innerWidth;\n        legendPosition.innerHeight = 0;\n      }\n\n      return legendPosition;\n    };\n\n    this.updateData = newData => {\n      this.data = newData;\n      this.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n      this.allLegend.attr('cx', d => {\n        return 10;\n      }).attr('cy', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1);\n      }).attr('fill', d => d.color);\n      this.enter();\n    };\n\n    this.enter = () => {\n      this.allLegend.enter().append('circle').attr('class', 'legendCircle').attr('cx', d => {\n        return 10;\n      }).attr('cy', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1);\n      }).attr('r', d => 7).attr('fill', d => {\n        return d.color;\n      }).attr(\"opacity\", 0.8);\n      this.allLegend.enter().append('text').text(d => {\n        return d.label;\n      }).attr('x', 20).attr('y', (d, i) => {\n        return -this.dimLegend.height + 20 * (i + 1) + 3;\n      }).attr('class', 'legendText');\n      this.exit();\n    };\n\n    this.exit = () => {\n      this.allLegend.exit().remove();\n    };\n\n    this.chart = chart;\n    this.options = options;\n    this.dims = dims;\n    this.scales = scales;\n    this.dimLegend = new Dimensions({\n      width: 140,\n      height: 100\n    });\n\n    var _legendPosition = this.setPosition();\n\n    this.legend = this.chart.append('g').attr('transform', \"translate(\".concat(_legendPosition.innerWidth, \", \").concat(_legendPosition.innerHeight, \")\")).attr('class', 'legend');\n    this.legend.append('text').text(this.options.title).attr('x', 5).attr('y', -this.dimLegend.height).attr('class', 'legendTitle');\n    var legendIntersectionObj = {\n      'label': this.options.labelIntersection,\n      'color': this.options.colorIntersection\n    };\n    if (this.options.showIntersection) data.push(legendIntersectionObj);\n    this.updateData(data);\n  }\n\n}\n\nexport default Legend;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Legend.js"],"names":["React","Circles","Intersection","Dimensions","Legend","Component","constructor","chart","options","dims","data","scales","setPosition","legendPosition","dimLegend","position","toLowerCase","align","innerWidth","innerHeight","updateData","newData","allLegend","legend","selectAll","attr","d","i","height","color","enter","append","text","label","exit","remove","width","title","legendIntersectionObj","labelIntersection","colorIntersection","showIntersection","push"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,UAAhC,QAAkD,aAAlD;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,MAA7B,EAAqC;AAC/C,UAAMJ,KAAN,EAAaC,OAAb;;AAD+C,SA2BhDI,WA3BgD,GA2BlC,MAAK;AAClB,UAAIC,cAAc,GAAG,IAAIV,UAAJ,CAAe,KAAKW,SAApB,CAArB;;AACA,UAAK,KAAKN,OAAL,CAAaO,QAAb,CAAsBC,WAAtB,MAAuC,OAAxC,IAAqD,KAAKR,OAAL,CAAaS,KAAb,CAAmBD,WAAnB,MAAoC,QAA7F,EACA;AACCH,QAAAA,cAAc,CAACK,UAAf,GAA4B,KAAKT,IAAL,CAAUS,UAAtC;AACAL,QAAAA,cAAc,CAACM,WAAf,GAA6B,KAAKV,IAAL,CAAUU,WAAvC;AACA,OAJD,MAKK,IAAK,KAAKX,OAAL,CAAaO,QAAb,CAAsBC,WAAtB,MAAuC,OAAxC,IAAqD,KAAKR,OAAL,CAAaS,KAAb,CAAmBD,WAAnB,MAAoC,KAA7F,EACL;AACCH,QAAAA,cAAc,CAACK,UAAf,GAA4B,KAAKT,IAAL,CAAUS,UAAtC;AACAL,QAAAA,cAAc,CAACM,WAAf,GAA6B,CAA7B;AACA;;AACD,aAAON,cAAP;AACA,KAxC+C;;AAAA,SA0ChDO,UA1CgD,GA0ClCC,OAAD,IAAa;AACzB,WAAKX,IAAL,GAAYW,OAAZ;AAEA,WAAKC,SAAL,GAAiB,KAAKC,MAAL,CAAYC,SAAZ,CAAsB,eAAtB,EAAuCd,IAAvC,CAA4C,KAAKA,IAAjD,CAAjB;AACA,WAAKY,SAAL,CACQG,IADR,CACa,IADb,EACoBC,CAAD,IAAO;AAAC,eAAO,EAAP;AAAU,OADrC,EAEQD,IAFR,CAEa,IAFb,EAEmB,CAACC,CAAD,EAAGC,CAAH,KAAS;AAAC,eAAO,CAAC,KAAKb,SAAL,CAAec,MAAhB,GAAyB,MAAMD,CAAC,GAAC,CAAR,CAAhC;AAA2C,OAFxE,EAGQF,IAHR,CAGa,MAHb,EAGsBC,CAAD,IAAOA,CAAC,CAACG,KAH9B;AAIG,WAAKC,KAAL;AACH,KAnD+C;;AAAA,SAqDhDA,KArDgD,GAqDxC,MAAM;AAEb,WAAKR,SAAL,CAAeQ,KAAf,GACQC,MADR,CACe,QADf,EAEQN,IAFR,CAEa,OAFb,EAEsB,cAFtB,EAGQA,IAHR,CAGa,IAHb,EAGoBC,CAAD,IAAM;AAAC,eAAO,EAAP;AAAU,OAHpC,EAIQD,IAJR,CAIa,IAJb,EAImB,CAACC,CAAD,EAAIC,CAAJ,KAAQ;AAAC,eAAO,CAAC,KAAKb,SAAL,CAAec,MAAhB,GAAwB,MAAID,CAAC,GAAC,CAAN,CAA/B;AAAyC,OAJrE,EAKQF,IALR,CAKa,GALb,EAKmBC,CAAD,IAAO,CALzB,EAMQD,IANR,CAMa,MANb,EAMsBC,CAAD,IAAO;AAAC,eAAOA,CAAC,CAACG,KAAT;AAAe,OAN5C,EAOQJ,IAPR,CAOa,SAPb,EAOwB,GAPxB;AASG,WAAKH,SAAL,CAAeQ,KAAf,GAAuBC,MAAvB,CAA8B,MAA9B,EACKC,IADL,CACWN,CAAD,IAAO;AAAC,eAAOA,CAAC,CAACO,KAAT;AAAgB,OADlC,EAEKR,IAFL,CAEU,GAFV,EAEe,EAFf,EAGKA,IAHL,CAGU,GAHV,EAGe,CAACC,CAAD,EAAIC,CAAJ,KAAQ;AAAC,eAAO,CAAC,KAAKb,SAAL,CAAec,MAAhB,GAAyB,MAAID,CAAC,GAAC,CAAN,CAAzB,GAAoC,CAA3C;AAA6C,OAHrE,EAIKF,IAJL,CAIU,OAJV,EAImB,YAJnB;AAUG,WAAKS,IAAL;AACN,KA3E+C;;AAAA,SA4EhDA,IA5EgD,GA4E3C,MAAI;AACL,WAAKZ,SAAL,CAAeY,IAAf,GAAsBC,MAAtB;AACH,KA9E+C;;AAE/C,SAAK5B,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKE,MAAL,GAAcA,MAAd;AACA,SAAKG,SAAL,GAAiB,IAAIX,UAAJ,CAAe;AAACiC,MAAAA,KAAK,EAAC,GAAP;AAAYR,MAAAA,MAAM,EAAC;AAAnB,KAAf,CAAjB;;AAEA,QAAIf,eAAc,GAAG,KAAKD,WAAL,EAArB;;AAEA,SAAKW,MAAL,GAAc,KAAKhB,KAAL,CAAWwB,MAAX,CAAkB,GAAlB,EAAuBN,IAAvB,CAA4B,WAA5B,sBAAsDZ,eAAc,CAACK,UAArE,eAAoFL,eAAc,CAACM,WAAnG,QACZM,IADY,CACP,OADO,EACE,QADF,CAAd;AAEA,SAAKF,MAAL,CAAYQ,MAAZ,CAAmB,MAAnB,EACQC,IADR,CACa,KAAKxB,OAAL,CAAa6B,KAD1B,EAEQZ,IAFR,CAEa,GAFb,EAEkB,CAFlB,EAGQA,IAHR,CAGa,GAHb,EAGkB,CAAE,KAAKX,SAAL,CAAec,MAHnC,EAIQH,IAJR,CAIa,OAJb,EAIsB,aAJtB;AAMA,QAAIa,qBAAqB,GAAE;AAC1B,eAAS,KAAK9B,OAAL,CAAa+B,iBADI;AAE1B,eAAS,KAAK/B,OAAL,CAAagC;AAFI,KAA3B;AAIA,QAAI,KAAKhC,OAAL,CAAaiC,gBAAjB,EACC/B,IAAI,CAACgC,IAAL,CAAUJ,qBAAV;AACD,SAAKlB,UAAL,CAAgBV,IAAhB;AACA;;AA1BkC;;AAmFpC,eAAeN,MAAf","sourcesContent":["import React from 'react';\nimport { Circles, Intersection, Dimensions } from './utilities';\n\nclass Legend extends React.Component{\n\tconstructor(chart, options, dims, data, scales) {\n\t\tsuper(chart, options);\n\t\tthis.chart = chart;\n\t\tthis.options = options;\n\t\tthis.dims = dims;\n\t\tthis.scales = scales;\n\t\tthis.dimLegend = new Dimensions({width:140, height:100});\n\n\t\tvar legendPosition = this.setPosition();\n\n\t\tthis.legend = this.chart.append('g').attr('transform', `translate(${legendPosition.innerWidth}, ${legendPosition.innerHeight})`)\n\t\t\t.attr('class', 'legend');\n\t\tthis.legend.append('text')\n\t        .text(this.options.title)\n\t        .attr('x', 5)\n\t        .attr('y', -(this.dimLegend.height))\n\t        .attr('class', 'legendTitle');\n\n\t\tvar legendIntersectionObj ={\n\t\t\t'label': this.options.labelIntersection,\n\t\t\t'color': this.options.colorIntersection\n\t\t}\n\t\tif (this.options.showIntersection)\n\t\t\tdata.push(legendIntersectionObj);\n\t\tthis.updateData(data);\n\t};\n\n\tsetPosition = () =>{\n\t\tlet legendPosition = new Dimensions(this.dimLegend);\n\t\tif ((this.options.position.toLowerCase() == 'right') && (this.options.align.toLowerCase() == 'bottom'))\n\t\t{\n\t\t\tlegendPosition.innerWidth = this.dims.innerWidth;\n\t\t\tlegendPosition.innerHeight = this.dims.innerHeight;\n\t\t}\n\t\telse if ((this.options.position.toLowerCase() == 'right') && (this.options.align.toLowerCase() == 'top'))\n\t\t{\n\t\t\tlegendPosition.innerWidth = this.dims.innerWidth;\n\t\t\tlegendPosition.innerHeight = 0;\n\t\t}\n\t\treturn legendPosition;\n\t};\n\n\tupdateData = (newData) => {\n\t\tthis.data = newData;\n\n\t\tthis.allLegend = this.legend.selectAll('.legendCircle').data(this.data);\n\t\tthis.allLegend\n\t        .attr('cx', (d) => {return 10})\n\t        .attr('cy', (d,i) => {return -this.dimLegend.height + 20 * (i+1)})\n\t        .attr('fill', (d) => d.color)\n   \t\tthis.enter();\n\t};\n\n\tenter = () => {\n\t\t\n\t\tthis.allLegend.enter()\n\t        .append('circle')\n\t        .attr('class', 'legendCircle')\n\t        .attr('cx', (d)=> {return 10})\n\t        .attr('cy', (d, i)=>{return -this.dimLegend.height+ 20*(i+1) })\n\t        .attr('r', (d) => 7)\n\t        .attr('fill', (d) => {return d.color})\n\t        .attr(\"opacity\", 0.8);\n\n\t    this.allLegend.enter().append('text')\n\t        .text((d) => {return d.label;})\n\t        .attr('x', 20)\n\t        .attr('y', (d, i)=>{return -this.dimLegend.height + 20*(i+1) + 3})\n\t        .attr('class', 'legendText');\n\n\t   \n\n\n\n        this.exit();\n\t};\n\texit=()=>{\n\t    this.allLegend.exit().remove();\n\t};\n\n}\n\nexport default Legend;"]},"metadata":{},"sourceType":"module"}