{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.init = (data, dims) => {};\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      item: item,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const xScaleKey = 'rowKey';\n    const yScaleKey = 'column';\n    let rows = R.groupBy(R.prop(xScaleKey), this.props.data);\n    const matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows.map(items => {\n      items.value;\n    }));\n    const getXLabels = R.keys;\n    const getYLabels = R.compose(R.map(R.prop(yScaleKey)), R.head, R.values);\n    console.log(rows);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.data.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"yAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, row.rowKey), R.map(this.renderSquare, row.items))), React.createElement(\"div\", {\n      className: \"xAxis\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","R","Matrix","Component","constructor","props","init","data","dims","renderSquare","item","className","render","xScaleKey","yScaleKey","rows","groupBy","prop","matrix","mapObjIndexed","sortBy","map","items","value","getXLabels","keys","getYLabels","compose","head","values","console","log","row","uniqueId","rowKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAGnBC,IAHmB,GAGd,CAACC,IAAD,EAAMC,IAAN,KAAc,CAElB,CALkB;AAElB;;AAIDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,SAAS,GAAC,QAAjB,EAA2B;AACtC,WAAO,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAED,IAAd;AAAoB,MAAA,SAAS,EAAIC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAGDC,EAAAA,MAAM,GAAG;AACR,UAAMC,SAAS,GAAG,QAAlB;AACA,UAAMC,SAAS,GAAG,QAAlB;AACA,QAAIC,IAAI,GAAGd,CAAC,CAACe,OAAF,CAAUf,CAAC,CAACgB,IAAF,CAAOJ,SAAP,CAAV,EAA6B,KAAKR,KAAL,CAAWE,IAAxC,CAAX;AAEA,UAAMW,MAAM,GAAGjB,CAAC,CAACkB,aAAF,CAAgBlB,CAAC,CAACmB,MAAF,CAASnB,CAAC,CAACgB,IAAF,CAAOH,SAAP,CAAT,CAAhB,EAA6CC,IAAI,CAACM,GAAL,CAASC,KAAK,IAAG;AAACA,MAAAA,KAAK,CAACC,KAAN;AAAY,KAA9B,CAA7C,CAAf;AAEA,UAAMC,UAAU,GAAGvB,CAAC,CAACwB,IAArB;AAEA,UAAMC,UAAU,GAAGzB,CAAC,CAAC0B,OAAF,CACjB1B,CAAC,CAACoB,GAAF,CAAMpB,CAAC,CAACgB,IAAF,CAAOH,SAAP,CAAN,CADiB,EAEjBb,CAAC,CAAC2B,IAFe,EAGjB3B,CAAC,CAAC4B,MAHe,CAAnB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKV,KAAL,CAAWE,IAAX,CAAgBc,GAAhB,CAAoBW,GAAG,IACtB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAG,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACED,GAAG,CAACE,MADN,CADD,EAIEjC,CAAC,CAACoB,GAAF,CAAM,KAAKZ,YAAX,EAAyBuB,GAAG,CAACV,KAA7B,CAJF,CADD,CAFD,EAWC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXD,CADD;AAkBA;;AA7CmC;;AA8CpC;AACD,eAAepB,MAAf","sourcesContent":["import React from 'react';\nimport { Square } from './utilities';\nimport * as R from 'ramda';\n\nclass Matrix extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t};\n\tinit=(data,dims) =>{\n\n\t};\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square item={item} className = {className} />;\n\t};\n\n\n\trender() {\n\t\tconst xScaleKey = 'rowKey';\n\t\tconst yScaleKey = 'column';\n\t\tlet rows = R.groupBy(R.prop(xScaleKey), this.props.data);\n\n\t\tconst matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows.map(items =>{items.value}));\n\n\t\tconst getXLabels = R.keys;\n\n\t\tconst getYLabels = R.compose(\n\t\t  R.map(R.prop(yScaleKey)), \n\t\t  R.head, \n\t\t  R.values\n\t\t)\n\t\tconsole.log(rows);\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tthis.props.data.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>\n\t\t\t\t\t\t<div className=\"yAxis\">\n\t\t\t\t\t\t\t{row.rowKey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{R.map(this.renderSquare, row.items)}\n\t\t\t\t\t</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t\t<div className=\"xAxis\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}