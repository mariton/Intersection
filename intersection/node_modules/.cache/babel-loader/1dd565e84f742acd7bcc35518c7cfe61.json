{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square, Dimensions, Scales, Axes, Circles } from './utilities';\nimport * as R from 'ramda';\nimport { select } from 'd3-selection';\n\nclass Matrix extends React.Component {\n  constructor(domNodeCurrent) {\n    this.svg = select(domNodeCurrent).append('svg');\n    this.svg.attr('width', '100%').attr('height', '100%');\n  }\n\n  renderSquare(item, className = \"square\") {\n    return React.createElement(Square, {\n      value: item.value,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n  render(data) {\n    this.data = data;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.data.map(row => React.createElement(\"div\", {\n      className: \"board-row\",\n      key: row.uniqueId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, R.map(this.renderSquare, row))));\n  }\n\n}\n\n;\nexport default Matrix;","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","Dimensions","Scales","Axes","Circles","R","select","Matrix","Component","constructor","domNodeCurrent","svg","append","attr","renderSquare","item","className","value","render","data","map","row","uniqueId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2CC,OAA3C,QAA0D,aAA1D;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAEpCC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC3B,SAAKC,GAAL,GAAWL,MAAM,CAACI,cAAD,CAAN,CAAuBE,MAAvB,CAA8B,KAA9B,CAAX;AACA,SAAKD,GAAL,CAASE,IAAT,CAAc,OAAd,EAAuB,MAAvB,EAA+BA,IAA/B,CAAoC,QAApC,EAA8C,MAA9C;AACA;;AAsBDC,EAAAA,YAAY,CAACC,IAAD,EAAOC,SAAS,GAAC,QAAjB,EAA2B;AACtC,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,IAAI,CAACE,KAApB;AAA2B,MAAA,SAAS,EAAID,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAEDE,EAAAA,MAAM,CAACC,IAAD,EAAO;AACZ,SAAKA,IAAL,GAAYA,IAAZ;AACA,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEC,KAAKA,IAAL,CAAUC,GAAV,CAAcC,GAAG,IAChB;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,GAAG,CAACC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDjB,CAAC,CAACe,GAAF,CAAM,KAAKN,YAAX,EAAyBO,GAAzB,CAAhD,CADD,CAFD,CADD;AAWA;;AA5CmC;;AA6CpC;AACD,eAAed,MAAf","sourcesContent":["import React from 'react';\nimport { Square, Dimensions, Scales, Axes, Circles } from './utilities';\nimport * as R from 'ramda';\nimport { select } from 'd3-selection';\n\nclass Matrix extends React.Component {\n\n\tconstructor(domNodeCurrent) {\n\t\tthis.svg = select(domNodeCurrent).append('svg');\n\t\tthis.svg.attr('width', '100%').attr('height', '100%');\n\t};\n\tinit=(data, dims)=>{\n\t\tthis.data = data;\n\t    this.dims = new Dimensions(dims); \n\t    this.chart = this.svg.append('g');\n\t    this.chart.attr('transform', `translate(${this.dims.margin.left}, ${this.dims.margin.top})`);\n\t    this.scales = new Scales(this.data, this.dims);//\n\t    this.axes = new Axes(this.chart, this.scales, this.dims);\n\t    this.circles = new Circles(this.chart, this.data, this.scales);\n\t};\n\n\tupdateData=(data)=>{\n\t\tthis.circles.updateData(data)\n\t};\n\n\tupdateDims=(dims)=>{\n\t\tthis.dims.setDims(dims);\n\t\tthis.scales.setScales(this.data, this.dims);\n\t\tthis.axes.updateAxes(this.scales, this.dims);\n\t\tthis.circles.updateScales(this.scales);\n\t};\n\t\n\trenderSquare(item, className=\"square\") {\n\t\treturn <Square value={item.value} className = {className}/>;\n\t};\n\n\trender(data) {\n\t\tthis.data = data;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t{\n\t\t\t\tthis.data.map(row => (\n\t\t\t\t\t<div className=\"board-row\" key={row.uniqueId}>{ R.map(this.renderSquare, row) }</div>\n\t\t\t\t))\n\t\t\t}\n\t\t\t</div>\n\t\t)\n\n\t\t\n\t};\n};\nexport default Matrix;"]},"metadata":{},"sourceType":"module"}