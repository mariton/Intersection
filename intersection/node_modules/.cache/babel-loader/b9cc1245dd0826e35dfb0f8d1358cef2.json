{"ast":null,"code":"var _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/size_matrix/src/matrix/Matrix.js\";\nimport React from 'react';\nimport { Square } from './utilities';\n\nclass Matrix extends React.Component {\n  constructor(data) {\n    super();\n    this.data = data;\n  }\n\n  loadData(data) {}\n\n  renderSquare(i, className = \"square\") {\n    return React.createElement(Square, {\n      value: i,\n      className: className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.renderSquare(\"\", \"squareInvisible\"), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\n;\nexport default Matrix;\n/*\nconsole.clear()\n\nconst data = [\n{c: \"C\", r: 1, v: \"CC\"}, {c: \"A\", r: 1, v: \"AA\"}, {c: \"B\", r: 1, v: \"BB\"},\n{c: \"C\", r: 0, v: \"CC\"}, {c: \"B\", r: 0, v: \"BB\"}, {c: \"A\", r: 0, v: \"AA\"}\n]\n\nconst xScaleKey = 'r';\nconst yScaleKey = 'c';\n\nlet rows = R.groupBy(R.prop(xScaleKey), data);\n\nconst matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows);\n\nconst getXLabels = R.keys\n\nconst getYLabels = R.compose(\n  R.map(R.prop(yScaleKey)), \n  R.head, \n  R.values\n)\n\ngetXLabels(matrix);\ngetYLabels(matrix);\nmatrix\n*/","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/size_matrix/src/matrix/Matrix.js"],"names":["React","Square","Matrix","Component","constructor","data","loadData","renderSquare","i","className","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AAEpCC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACjB;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AACDC,EAAAA,QAAQ,CAACD,IAAD,EAAO,CAEd;;AAEDE,EAAAA,YAAY,CAACC,CAAD,EAAIC,SAAS,GAAC,QAAd,EAAwB;AACnC,WAAO,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAED,CAAf;AAAkB,MAAA,SAAS,EAAIC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ,KAAKH,YAAL,CAAkB,EAAlB,EAAsB,iBAAtB,CADR,EAEQ,KAAKA,YAAL,CAAkB,CAAlB,CAFR,EAGQ,KAAKA,YAAL,CAAkB,CAAlB,CAHR,CADH,EAMQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CANR,EAWQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,YAAL,CAAkB,CAAlB,CADH,EAEG,KAAKA,YAAL,CAAkB,CAAlB,CAFH,EAGG,KAAKA,YAAL,CAAkB,CAAlB,CAHH,CAXR,CADD;AAmBA;;AAlCmC;;AAmCpC;AACD,eAAeL,MAAf;AAEA","sourcesContent":["import React from 'react';\nimport { Square } from './utilities';\n\nclass Matrix extends React.Component {\n\n\tconstructor(data) {\n\t\tsuper();\n\t\tthis.data = data;\n\t}\n\tloadData(data) {\n\n\t}\n\n\trenderSquare(i, className=\"square\") {\n\t\treturn <Square value={i} className = {className}/>;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t  <div className=\"board-row\">\n\t\t\t          {this.renderSquare(\"\", \"squareInvisible\")}\n\t\t\t          {this.renderSquare(1)}\n\t\t\t          {this.renderSquare(2)}\n\t\t\t        </div>\n\t\t\t        <div className=\"board-row\">\n\t\t\t          {this.renderSquare(3)}\n\t\t\t          {this.renderSquare(4)}\n\t\t\t          {this.renderSquare(5)}\n\t\t\t        </div>\n\t\t\t        <div className=\"board-row\">\n\t\t\t          {this.renderSquare(6)}\n\t\t\t          {this.renderSquare(7)}\n\t\t\t          {this.renderSquare(8)}\n\t\t\t        </div>\n\t\t\t</div>\n\t\t\t);\n\t};\n};\nexport default Matrix;\n\n/*\nconsole.clear()\n\nconst data = [\n{c: \"C\", r: 1, v: \"CC\"}, {c: \"A\", r: 1, v: \"AA\"}, {c: \"B\", r: 1, v: \"BB\"},\n{c: \"C\", r: 0, v: \"CC\"}, {c: \"B\", r: 0, v: \"BB\"}, {c: \"A\", r: 0, v: \"AA\"}\n]\n\nconst xScaleKey = 'r';\nconst yScaleKey = 'c';\n\nlet rows = R.groupBy(R.prop(xScaleKey), data);\n\nconst matrix = R.mapObjIndexed(R.sortBy(R.prop(yScaleKey)), rows);\n\nconst getXLabels = R.keys\n\nconst getYLabels = R.compose(\n  R.map(R.prop(yScaleKey)), \n  R.head, \n  R.values\n)\n\ngetXLabels(matrix);\ngetYLabels(matrix);\nmatrix\n*/"]},"metadata":{},"sourceType":"module"}