{"ast":null,"code":"import _slicedToArray from \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/ReactNode.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { withContext } from 'react-dims';\nimport Matrix from './matrix/Matrix';\n\nconst ReactNode = ({\n  dims,\n  data,\n  options\n}) => {\n  const domNode = useRef(null);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        canvas = _useState2[0],\n        createCanvas = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        vizInitialized = _useState4[0],\n        setVizInitialized = _useState4[1];\n\n  console.log(\"options in reactnode\", options);\n  useEffect(() => {\n    createCanvas(() => new Matrix(domNode.current, options));\n  }, [options]);\n  useEffect(() => {\n    if (data.length > 1 && dims.width && vizInitialized === false) {\n      canvas.init(data, dims);\n      setVizInitialized(() => true);\n    }\n\n    ;\n  }, [data, dims, vizInitialized, canvas]);\n  return React.createElement(\"div\", {\n    ref: domNode,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n};\n\nexport default withContext(ReactNode);","map":{"version":3,"sources":["/Users/marinas/WORK/GIT/ReactD3-projects/React-projects/size_matrix/src/ReactNode.js"],"names":["React","useRef","useState","useEffect","withContext","Matrix","ReactNode","dims","data","options","domNode","canvas","createCanvas","vizInitialized","setVizInitialized","console","log","current","length","width","init","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA;AAAb,CAAD,KAAyB;AACzC,QAAMC,OAAO,GAAGT,MAAM,CAAC,IAAD,CAAtB;;AADyC,oBAEVC,QAAQ,CAAC,IAAD,CAFE;AAAA;AAAA,QAElCS,MAFkC;AAAA,QAE1BC,YAF0B;;AAAA,qBAGEV,QAAQ,CAAC,KAAD,CAHV;AAAA;AAAA,QAGlCW,cAHkC;AAAA,QAGlBC,iBAHkB;;AAKzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,OAApC;AAEAN,EAAAA,SAAS,CAAC,MAAI;AACZS,IAAAA,YAAY,CAAC,MAAI,IAAIP,MAAJ,CAAWK,OAAO,CAACO,OAAnB,EAA4BR,OAA5B,CAAL,CAAZ;AACD,GAFQ,EAEP,CAACA,OAAD,CAFO,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGK,IAAI,CAACU,MAAL,GAAY,CAAZ,IAAiBX,IAAI,CAACY,KAAtB,IAA+BN,cAAc,KAAG,KAAnD,EAAyD;AACvDF,MAAAA,MAAM,CAACS,IAAP,CAAYZ,IAAZ,EAAkBD,IAAlB;AACAO,MAAAA,iBAAiB,CAAC,MAAI,IAAL,CAAjB;AACD;;AAAA;AACF,GALQ,EAKP,CAACN,IAAD,EAAOD,IAAP,EAAaM,cAAb,EAA6BF,MAA7B,CALO,CAAT;AAQA,SACE;AAAK,IAAA,GAAG,EAAED,OAAV;AAAmB,IAAA,KAAK,EAAE;AAACW,MAAAA,MAAM,EAAE,MAAT;AAAiBF,MAAAA,KAAK,EAAE;AAAxB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAtBD;;AAwBA,eAAef,WAAW,CAACE,SAAD,CAA1B","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { withContext } from 'react-dims';\nimport Matrix from './matrix/Matrix';\n\nconst ReactNode = ({dims, data, options})=>{\n  const domNode = useRef(null);\n  const [canvas, createCanvas] = useState(null);\n  const [vizInitialized, setVizInitialized]= useState(false);\n\n  console.log(\"options in reactnode\", options);\n\n  useEffect(()=>{\n    createCanvas(()=>new Matrix(domNode.current, options));\n  },[options]);\n\n  useEffect(()=>{\n    if(data.length>1 && dims.width && vizInitialized===false){\n      canvas.init(data, dims);\n      setVizInitialized(()=>true);\n    };\n  },[data, dims, vizInitialized, canvas]);  \n  \n\n  return (\n    <div ref={domNode} style={{height: '100%', width: '100%'}}/>\n  )\n};\n\nexport default withContext(ReactNode);"]},"metadata":{},"sourceType":"module"}