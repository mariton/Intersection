"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withContext = exports.Provider = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ReactDims = _react["default"].createContext(null);

var Provider = function Provider(props) {
  var domNode = (0, _react.useRef)(null);

  var _useState = (0, _react.useState)({}),
      _useState2 = _slicedToArray(_useState, 2),
      dimensions = _useState2[0],
      setDimensions = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      timeoutID = _useState4[0],
      newTimeoutID = _useState4[1];

  (0, _react.useEffect)(function () {
    setDimensions(domNode.current.getBoundingClientRect());
  }, []);
  (0, _react.useEffect)(function () {
    window.addEventListener('resize', getNodeDimensions);
    return function () {
      window.removeEventListener('resize', getNodeDimensions);
    };
  }, []);

  var getNodeDimensions = function getNodeDimensions() {
    clearTimeout(timeoutID);
    newTimeoutID(setTimeout(function () {
      setDimensions(domNode.current.getBoundingClientRect());
    }, props.debounce));
  };

  return _react["default"].createElement("div", {
    ref: domNode,
    style: {
      height: '100%'
    }
  }, _react["default"].createElement(ReactDims.Provider, {
    value: dimensions
  }, props.children));
};

exports.Provider = Provider;
Provider.propTypes = {
  debounce: _propTypes["default"].number
};
Provider.defaultProps = {
  debounce: 100
};

var withContext = function withContext(ChildComponent) {
  return function (props) {
    return _react["default"].createElement(ReactDims.Consumer, null, function (incomingDims) {
      return _react["default"].createElement(ChildComponent, _extends({}, props, {
        dims: incomingDims
      }));
    });
  };
};

exports.withContext = withContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJSZWFjdERpbXMiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJQcm92aWRlciIsInByb3BzIiwiZG9tTm9kZSIsImRpbWVuc2lvbnMiLCJzZXREaW1lbnNpb25zIiwidGltZW91dElEIiwibmV3VGltZW91dElEIiwiY3VycmVudCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJnZXROb2RlRGltZW5zaW9ucyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZGVib3VuY2UiLCJoZWlnaHQiLCJjaGlsZHJlbiIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm51bWJlciIsImRlZmF1bHRQcm9wcyIsIndpdGhDb250ZXh0IiwiQ2hpbGRDb21wb25lbnQiLCJpbmNvbWluZ0RpbXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0Msa0JBQU1DLGFBQU4sQ0FBb0IsSUFBcEIsQ0FBbEI7O0FBRU8sSUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQ0MsS0FBRCxFQUFTO0FBQy9CLE1BQU1DLE9BQU8sR0FBRyxtQkFBTyxJQUFQLENBQWhCOztBQUQrQixrQkFFSyxxQkFBUyxFQUFULENBRkw7QUFBQTtBQUFBLE1BRXhCQyxVQUZ3QjtBQUFBLE1BRVpDLGFBRlk7O0FBQUEsbUJBR0cscUJBQVMsSUFBVCxDQUhIO0FBQUE7QUFBQSxNQUd4QkMsU0FId0I7QUFBQSxNQUdiQyxZQUhhOztBQUsvQix3QkFBVSxZQUFJO0FBQ1pGLElBQUFBLGFBQWEsQ0FBQ0YsT0FBTyxDQUFDSyxPQUFSLENBQWdCQyxxQkFBaEIsRUFBRCxDQUFiO0FBQ0QsR0FGRCxFQUVFLEVBRkY7QUFJQSx3QkFBVSxZQUFJO0FBQ1pDLElBQUFBLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0IsUUFBeEIsRUFBa0NDLGlCQUFsQztBQUNBLFdBQU8sWUFBSTtBQUFFRixNQUFBQSxNQUFNLENBQUNHLG1CQUFQLENBQTJCLFFBQTNCLEVBQXFDRCxpQkFBckM7QUFBd0QsS0FBckU7QUFDRCxHQUhELEVBR0csRUFISDs7QUFLQSxNQUFNQSxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLEdBQUk7QUFDNUJFLElBQUFBLFlBQVksQ0FBQ1IsU0FBRCxDQUFaO0FBQ0FDLElBQUFBLFlBQVksQ0FBQ1EsVUFBVSxDQUFDLFlBQUk7QUFDeEJWLE1BQUFBLGFBQWEsQ0FBQ0YsT0FBTyxDQUFDSyxPQUFSLENBQWdCQyxxQkFBaEIsRUFBRCxDQUFiO0FBQ0QsS0FGb0IsRUFFbEJQLEtBQUssQ0FBQ2MsUUFGWSxDQUFYLENBQVo7QUFJRCxHQU5EOztBQVFBLFNBQ0U7QUFBSyxJQUFBLEdBQUcsRUFBRWIsT0FBVjtBQUFtQixJQUFBLEtBQUssRUFBRTtBQUFDYyxNQUFBQSxNQUFNLEVBQUU7QUFBVDtBQUExQixLQUNFLGdDQUFDLFNBQUQsQ0FBVyxRQUFYO0FBQW9CLElBQUEsS0FBSyxFQUFFYjtBQUEzQixLQUNHRixLQUFLLENBQUNnQixRQURULENBREYsQ0FERjtBQU9ELENBN0JNOzs7QUErQlBqQixRQUFRLENBQUNrQixTQUFULEdBQXFCO0FBQ25CSCxFQUFBQSxRQUFRLEVBQUVJLHNCQUFVQztBQURELENBQXJCO0FBSUFwQixRQUFRLENBQUNxQixZQUFULEdBQXdCO0FBQ3RCTixFQUFBQSxRQUFRLEVBQUU7QUFEWSxDQUF4Qjs7QUFJTyxJQUFNTyxXQUFXLEdBQUMsU0FBWkEsV0FBWSxDQUFDQyxjQUFELEVBQWtCO0FBQ3pDLFNBQU8sVUFBQ3RCLEtBQUQ7QUFBQSxXQUNELGdDQUFDLFNBQUQsQ0FBVyxRQUFYLFFBQ0csVUFBQ3VCLFlBQUQ7QUFBQSxhQUFpQixnQ0FBQyxjQUFELGVBQW9CdkIsS0FBcEI7QUFBMkIsUUFBQSxJQUFJLEVBQUV1QjtBQUFqQyxTQUFqQjtBQUFBLEtBREgsQ0FEQztBQUFBLEdBQVA7QUFLRCxDQU5NIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFJlYWN0RGltcyA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmV4cG9ydCBjb25zdCBQcm92aWRlciA9IChwcm9wcyk9PntcbiAgY29uc3QgZG9tTm9kZSA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgW2RpbWVuc2lvbnMsIHNldERpbWVuc2lvbnNdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbdGltZW91dElELCBuZXdUaW1lb3V0SURdID0gdXNlU3RhdGUobnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpPT57XG4gICAgc2V0RGltZW5zaW9ucyhkb21Ob2RlLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpO1xuICB9LFtdKTtcblxuICB1c2VFZmZlY3QoKCk9PntcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZ2V0Tm9kZURpbWVuc2lvbnMpO1xuICAgIHJldHVybiAoKT0+eyB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZ2V0Tm9kZURpbWVuc2lvbnMpfTtcbiAgfSwgW10pO1xuXG4gIGNvbnN0IGdldE5vZGVEaW1lbnNpb25zID0gKCk9PntcbiAgICBjbGVhclRpbWVvdXQodGltZW91dElEKTtcbiAgICBuZXdUaW1lb3V0SUQoc2V0VGltZW91dCgoKT0+e1xuICAgICAgICBzZXREaW1lbnNpb25zKGRvbU5vZGUuY3VycmVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSk7XG4gICAgICB9LCBwcm9wcy5kZWJvdW5jZSlcbiAgICApO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiByZWY9e2RvbU5vZGV9IHN0eWxlPXt7aGVpZ2h0OiAnMTAwJSd9fT5cbiAgICAgIDxSZWFjdERpbXMuUHJvdmlkZXIgdmFsdWU9e2RpbWVuc2lvbnN9PlxuICAgICAgICB7cHJvcHMuY2hpbGRyZW59XG4gICAgICA8L1JlYWN0RGltcy5Qcm92aWRlcj5cbiAgICA8L2Rpdj5cbiAgKVxufTtcblxuUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICBkZWJvdW5jZTogUHJvcFR5cGVzLm51bWJlclxufVxuXG5Qcm92aWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gIGRlYm91bmNlOiAxMDBcbn1cblxuZXhwb3J0IGNvbnN0IHdpdGhDb250ZXh0PShDaGlsZENvbXBvbmVudCk9PntcbiAgcmV0dXJuIChwcm9wcyk9PihcbiAgICAgICAgPFJlYWN0RGltcy5Db25zdW1lcj5cbiAgICAgICAgICB7KGluY29taW5nRGltcyk9Pig8Q2hpbGRDb21wb25lbnQgey4uLnByb3BzfSBkaW1zPXtpbmNvbWluZ0RpbXN9IC8+KX1cbiAgICAgICAgPC9SZWFjdERpbXMuQ29uc3VtZXI+XG4gIClcbn07XG4iXX0=