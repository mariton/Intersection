"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withContext = exports.Provider = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var ReactDims = _react["default"].createContext(null);

var Provider = function Provider(props) {
  var domNode = (0, _react.useRef)(null);

  var _useState = (0, _react.useState)({}),
      _useState2 = _slicedToArray(_useState, 2),
      dimensions = _useState2[0],
      setDimensions = _useState2[1];

  var _useState3 = (0, _react.useState)(0),
      _useState4 = _slicedToArray(_useState3, 2),
      invocationContext = _useState4[0],
      setInvocationContext = _useState4[1];

  (0, _react.useEffect)(function () {
    setDimensions(domNode.current.getBoundingClientRect());
  }, []);
  (0, _react.useEffect)(function () {
    window.addEventListener('resize', getNodeDimensions);
    return function () {
      window.removeEventListener('resize', getNodeDimensions);
    };
  }, []);

  var getNodeDimensions = function getNodeDimensions() {
    clearTimeout(invocationContext);
    setInvocationContext(function () {
      return setTimeout(function () {
        setDimensions(domNode.current.getBoundingClientRect());
      }, props.debounce);
    });
  };

  return _react["default"].createElement("div", {
    ref: domNode,
    style: {
      height: '100%'
    }
  }, _react["default"].createElement(ReactDims.Provider, {
    value: dimensions
  }, props.children));
};

exports.Provider = Provider;
Provider.propTypes = {
  debounce: _propTypes["default"].number
};
Provider.defaultProps = {
  debounce: 100
};

var withContext = function withContext(ChildComponent) {
  return function (props) {
    return _react["default"].createElement(ReactDims.Consumer, null, function (incomingDims) {
      return _react["default"].createElement(ChildComponent, _extends({}, props, {
        dims: incomingDims
      }));
    });
  };
};

exports.withContext = withContext;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJSZWFjdERpbXMiLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJQcm92aWRlciIsInByb3BzIiwiZG9tTm9kZSIsImRpbWVuc2lvbnMiLCJzZXREaW1lbnNpb25zIiwiaW52b2NhdGlvbkNvbnRleHQiLCJzZXRJbnZvY2F0aW9uQ29udGV4dCIsImN1cnJlbnQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiZ2V0Tm9kZURpbWVuc2lvbnMiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsImRlYm91bmNlIiwiaGVpZ2h0IiwiY2hpbGRyZW4iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJudW1iZXIiLCJkZWZhdWx0UHJvcHMiLCJ3aXRoQ29udGV4dCIsIkNoaWxkQ29tcG9uZW50IiwiaW5jb21pbmdEaW1zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxTQUFTLEdBQUdDLGtCQUFNQyxhQUFOLENBQW9CLElBQXBCLENBQWxCOztBQUVPLElBQU1DLFFBQVEsR0FBRyxTQUFYQSxRQUFXLENBQUNDLEtBQUQsRUFBUztBQUMvQixNQUFNQyxPQUFPLEdBQUcsbUJBQU8sSUFBUCxDQUFoQjs7QUFEK0Isa0JBRUsscUJBQVMsRUFBVCxDQUZMO0FBQUE7QUFBQSxNQUV4QkMsVUFGd0I7QUFBQSxNQUVaQyxhQUZZOztBQUFBLG1CQUdtQixxQkFBUyxDQUFULENBSG5CO0FBQUE7QUFBQSxNQUd4QkMsaUJBSHdCO0FBQUEsTUFHTEMsb0JBSEs7O0FBSy9CLHdCQUFVLFlBQUk7QUFDWkYsSUFBQUEsYUFBYSxDQUFDRixPQUFPLENBQUNLLE9BQVIsQ0FBZ0JDLHFCQUFoQixFQUFELENBQWI7QUFDRCxHQUZELEVBRUUsRUFGRjtBQUlBLHdCQUFVLFlBQUk7QUFDWkMsSUFBQUEsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QixRQUF4QixFQUFrQ0MsaUJBQWxDO0FBQ0EsV0FBTyxZQUFJO0FBQUVGLE1BQUFBLE1BQU0sQ0FBQ0csbUJBQVAsQ0FBMkIsUUFBM0IsRUFBcUNELGlCQUFyQztBQUF3RCxLQUFyRTtBQUNELEdBSEQsRUFHRyxFQUhIOztBQUtBLE1BQU1BLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsR0FBSTtBQUM1QkUsSUFBQUEsWUFBWSxDQUFDUixpQkFBRCxDQUFaO0FBQ0FDLElBQUFBLG9CQUFvQixDQUFDO0FBQUEsYUFBSVEsVUFBVSxDQUFDLFlBQUk7QUFDdENWLFFBQUFBLGFBQWEsQ0FBQ0YsT0FBTyxDQUFDSyxPQUFSLENBQWdCQyxxQkFBaEIsRUFBRCxDQUFiO0FBQ0QsT0FGa0MsRUFFaENQLEtBQUssQ0FBQ2MsUUFGMEIsQ0FBZDtBQUFBLEtBQUQsQ0FBcEI7QUFJRCxHQU5EOztBQVFBLFNBQ0U7QUFBSyxJQUFBLEdBQUcsRUFBRWIsT0FBVjtBQUFtQixJQUFBLEtBQUssRUFBRTtBQUFDYyxNQUFBQSxNQUFNLEVBQUU7QUFBVDtBQUExQixLQUNFLGdDQUFDLFNBQUQsQ0FBVyxRQUFYO0FBQW9CLElBQUEsS0FBSyxFQUFFYjtBQUEzQixLQUNHRixLQUFLLENBQUNnQixRQURULENBREYsQ0FERjtBQU9ELENBN0JNOzs7QUErQlBqQixRQUFRLENBQUNrQixTQUFULEdBQXFCO0FBQ25CSCxFQUFBQSxRQUFRLEVBQUVJLHNCQUFVQztBQURELENBQXJCO0FBSUFwQixRQUFRLENBQUNxQixZQUFULEdBQXdCO0FBQ3RCTixFQUFBQSxRQUFRLEVBQUU7QUFEWSxDQUF4Qjs7QUFJTyxJQUFNTyxXQUFXLEdBQUMsU0FBWkEsV0FBWSxDQUFDQyxjQUFELEVBQWtCO0FBQ3pDLFNBQU8sVUFBQ3RCLEtBQUQ7QUFBQSxXQUNELGdDQUFDLFNBQUQsQ0FBVyxRQUFYLFFBQ0csVUFBQ3VCLFlBQUQ7QUFBQSxhQUFpQixnQ0FBQyxjQUFELGVBQW9CdkIsS0FBcEI7QUFBMkIsUUFBQSxJQUFJLEVBQUV1QjtBQUFqQyxTQUFqQjtBQUFBLEtBREgsQ0FEQztBQUFBLEdBQVA7QUFLRCxDQU5NIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IFJlYWN0RGltcyA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5cbmV4cG9ydCBjb25zdCBQcm92aWRlciA9IChwcm9wcyk9PntcbiAgY29uc3QgZG9tTm9kZSA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgW2RpbWVuc2lvbnMsIHNldERpbWVuc2lvbnNdID0gdXNlU3RhdGUoe30pO1xuICBjb25zdCBbaW52b2NhdGlvbkNvbnRleHQsIHNldEludm9jYXRpb25Db250ZXh0XSA9IHVzZVN0YXRlKDApO1xuXG4gIHVzZUVmZmVjdCgoKT0+e1xuICAgIHNldERpbWVuc2lvbnMoZG9tTm9kZS5jdXJyZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKTtcbiAgfSxbXSk7XG5cbiAgdXNlRWZmZWN0KCgpPT57XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGdldE5vZGVEaW1lbnNpb25zKTtcbiAgICByZXR1cm4gKCk9Pnsgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGdldE5vZGVEaW1lbnNpb25zKX07XG4gIH0sIFtdKTtcblxuICBjb25zdCBnZXROb2RlRGltZW5zaW9ucyA9ICgpPT57XG4gICAgY2xlYXJUaW1lb3V0KGludm9jYXRpb25Db250ZXh0KTtcbiAgICBzZXRJbnZvY2F0aW9uQ29udGV4dCgoKT0+c2V0VGltZW91dCgoKT0+e1xuICAgICAgc2V0RGltZW5zaW9ucyhkb21Ob2RlLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkpO1xuICAgIH0sIHByb3BzLmRlYm91bmNlKVxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IHJlZj17ZG9tTm9kZX0gc3R5bGU9e3toZWlnaHQ6ICcxMDAlJ319PlxuICAgICAgPFJlYWN0RGltcy5Qcm92aWRlciB2YWx1ZT17ZGltZW5zaW9uc30+XG4gICAgICAgIHtwcm9wcy5jaGlsZHJlbn1cbiAgICAgIDwvUmVhY3REaW1zLlByb3ZpZGVyPlxuICAgIDwvZGl2PlxuICApXG59O1xuXG5Qcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIGRlYm91bmNlOiBQcm9wVHlwZXMubnVtYmVyXG59XG5cblByb3ZpZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgZGVib3VuY2U6IDEwMFxufVxuXG5leHBvcnQgY29uc3Qgd2l0aENvbnRleHQ9KENoaWxkQ29tcG9uZW50KT0+e1xuICByZXR1cm4gKHByb3BzKT0+KFxuICAgICAgICA8UmVhY3REaW1zLkNvbnN1bWVyPlxuICAgICAgICAgIHsoaW5jb21pbmdEaW1zKT0+KDxDaGlsZENvbXBvbmVudCB7Li4ucHJvcHN9IGRpbXM9e2luY29taW5nRGltc30gLz4pfVxuICAgICAgICA8L1JlYWN0RGltcy5Db25zdW1lcj5cbiAgKVxufTtcbiJdfQ==